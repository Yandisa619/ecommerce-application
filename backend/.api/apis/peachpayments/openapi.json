{
  "openapi": "3.0.3",
  "info": {
    "version": "1.0.0",
    "title": "Checkout",
    "description": "Checkout by Peach Payments is a ready to use payment experience securely hosted and managed by Peach Payments. With Checkout, merchants have the ability to accept a full range of payment methods with only a single developer integration. Support for card, EFT, BNPL (buy now, pay later), QR code, digital wallet, voucher, and mobile money are available straight out the box and can be customised by the merchant through the Peach Payments Console. Checkout is secure and provides both the merchant and customer confidence in the security of web payments.\nThis specification helps developers to easily integrate Checkout into payment pages for web using the Checkout API.",
    "contact": {
      "name": "Peach Payments Support",
      "url": "https://support.peachpayments.com/support/home",
      "email": "support@peachpayments.com"
    }
  },
  "servers": [
    {
      "url": "https://testsecure.peachpayments.com",
      "description": "Sandbox environment."
    },
    {
      "url": "https://secure.peachpayments.com",
      "description": "Live environment."
    }
  ],
  "security": [],
  "paths": {
    "/checkout/initiate": {
      "post": {
        "tags": [
          "Checkout generation"
        ],
        "summary": "Initiate redirect-based Checkout",
        "description": "Provide a redirect URL to the caller to redirect the user into the Checkout experience. The POST request contains the entityId, signature, purchase parameters, and any custom parameters that a merchant optionally sends. This allows the checkout instance to be created from a backend without requiring a \"form post\", or other similar method, from the frontend.\n\nFor more information, see the [documentation](https://developer.peachpayments.com/docs/checkout-payment#redirect-based-checkout).\n",
        "parameters": [
          {
            "in": "header",
            "name": "Referer",
            "description": "An allowlisted domain for the merchant.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "https://example.com"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "authentication.entityId": {
                    "description": "The entity for the request. By default, this is the channel ID.",
                    "type": "string",
                    "maxLength": 32,
                    "example": "8ac7a4ca68c22c4d0168c2caab2e0025"
                  },
                  "signature": {
                    "description": "Token to verify the integrity of the payment, ensuring that only the merchant sending the request is accepted.",
                    "type": "string",
                    "maxLength": 64,
                    "example": "a668342244a9c77b08a2f9090d033d6e2610b431a5c0ca975f32035ed06164f4"
                  },
                  "merchantTransactionId": {
                    "description": "Merchant-provided reference number unique for your transactions.",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 8,
                    "format": "8-16",
                    "example": "OrderNo453432"
                  },
                  "amount": {
                    "description": "The amount of the payment request. The period is used as the decimal separator.\n\nAn amount of 0 is only supported when the `paymentType` is `PA` and `createRegistration` is set to `true`.\n\nM-PESA does not support decimal amounts, so Checkout automatically rounds them up.\n",
                    "type": "string",
                    "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
                    "example": "1010.22"
                  },
                  "paymentType": {
                    "description": "The payment type for the request.\n\nDoes not accept `RG`, but you can tokenise a card by performing a DB or PA with `createRegistration`.\n\nPA is only supported when `forceDefaultMethod` is set to `true` and `defaultPaymentMethod` is `CARD`.\nFollowing a PA, you can either [capture](https://developer.peachpayments.com/docs/card-manage-payments#capture-a-preauthorisation) or [reverse](https://developer.peachpayments.com/docs/card-manage-payments#reverse-a-preauthorisation) the PA.\n\nRefund transactions through the Dashboard or as described in the [documentation](https://developer.peachpayments.com/docs/checkout-refund).\n",
                    "type": "string",
                    "enum": [
                      "DB",
                      "PA"
                    ],
                    "example": "DB"
                  },
                  "currency": {
                    "description": "The currency code of the payment request amount.",
                    "type": "string",
                    "enum": [
                      "ZAR",
                      "USD",
                      "KES",
                      "MUR",
                      "GBP",
                      "EUR"
                    ],
                    "example": "ZAR"
                  },
                  "nonce": {
                    "description": "Unique value to represent each request.",
                    "type": "string",
                    "example": "UNQ00012345678",
                    "maxLength": 64,
                    "format": "string (1-64)"
                  },
                  "shopperResultUrl": {
                    "description": "Checkout uses a POST request to redirect the customer to this URL after the customer completes checkout. Must be a valid URL that can be accessed through a browser.",
                    "type": "string",
                    "format": "string (6-2048)",
                    "example": "https://mydemostore.com/OrderNo453432"
                  },
                  "defaultPaymentMethod": {
                    "description": "The preferred payment method which is active in the checkout page at the point of redirecting.",
                    "type": "string",
                    "enum": [
                      "CARD",
                      "MASTERPASS",
                      "MOBICRED",
                      "MPESA",
                      "1FORYOU",
                      "APLUS",
                      "PAYPAL",
                      "ZEROPAY",
                      "PAYFLEX",
                      "BLINKBYEMTEL",
                      "CAPITECPAY",
                      "PAYBYBANK",
                      "APPLE PAY",
                      "GOOGLEPAY",
                      "SAMSUNGPAY",
                      "MCBJUICE",
                      "RCS",
                      "FLOAT",
                      "HAPPYPAY"
                    ],
                    "example": "CARD"
                  },
                  "forceDefaultMethod": {
                    "description": "Force the default payment method to be the only payment method.",
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ],
                    "example": "false",
                    "default": "false"
                  },
                  "merchantInvoiceId": {
                    "description": "Merchant-provided invoice number unique for your transactions. This identifier is not sent onwards.",
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 255,
                    "format": "string (8-255)",
                    "example": "INV-0001"
                  },
                  "cancelUrl": {
                    "description": "The customer is redirected to this URL if they cancel checkout. It must be a valid URL that can be reached through a browser. To enable the `cancelUrl` parameter, [contact support](https://support.peachpayments.com/support/tickets/new).",
                    "type": "string",
                    "format": "string (6-2048)",
                    "example": "https://example.com/OrderNo453432/cancelled"
                  },
                  "notificationUrl": {
                    "description": "Peach Payments sends a webhook to this URL for any changes to this checkout instance, in addition to the webhook sent to the preconfigured URL.",
                    "type": "string",
                    "format": "string (6-2048)",
                    "example": "https://example.com/OrderNo453432/webhook"
                  },
                  "customParameters[name]": {
                    "description": "A name value pair used for sending custom information. To display custom parameters in the Peach Payments Dashboard > transaction details panel > **More details** tab, use the `customParameters[auxData]:\"{\\\"user_id\\\":\\\"12345\\\",\\\"paymentId\\\":\\\"98765\\\"}\"` format, changing the parameters as required.",
                    "type": "string",
                    "format": "name: [a-zA-Z0-9\\._]{3,64} value: [\\s\\S]{0,2048}",
                    "example": "name: Name1 value: Value1"
                  },
                  "customer.merchantCustomerId": {
                    "description": "An identifier for this customer. Typically this is the ID that identifies the shopper in the shop's system.",
                    "type": "string",
                    "maxLength": 48,
                    "minLength": 0,
                    "format": "[\\s\\S]{0,48}",
                    "example": "971020"
                  },
                  "customer.givenName": {
                    "description": "The customer's first name or given name.\n\nRequired if you send in any other customer parameters, and for some risk checks and payment providers.\n\nPeach Payments recommends including the name so that it displays in the Peach Dashboard and is available for subsequent queries.\n\nTruncated after 48 characters.\n",
                    "type": "string",
                    "maxLength": 48,
                    "minLength": 0,
                    "format": "[\\s\\S]{0,48}",
                    "example": "John"
                  },
                  "customer.surname": {
                    "description": "The customer's last name or surname.\n\nRequired if you send in any other customer parameters, and for some risk checks and payment providers.\n\nPeach Payments recommends including the surname so that it displays in the Peach Dashboard and is available for subsequent queries.\n\nTruncated after 48 characters.\n",
                    "type": "string",
                    "maxLength": 48,
                    "minLength": 0,
                    "format": "[\\s\\S]{0,48}",
                    "example": "Smith"
                  },
                  "customer.mobile": {
                    "description": "The customer's mobile number.",
                    "type": "string",
                    "maxLength": 24,
                    "minLength": 5,
                    "format": "[+0-9][0-9 \\.()/-]{5,24}",
                    "example": "+27123456789"
                  },
                  "customer.email": {
                    "description": "The customer's email address.",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 6,
                    "format": "[\\s\\S]{6,128}",
                    "example": "johnsmith@example.com"
                  },
                  "customer.status": {
                    "description": "The customer's status. Accepts `NEW` or `EXISTING`.",
                    "type": "string",
                    "enum": [
                      "NEW",
                      "EXISTING"
                    ],
                    "example": "EXISTING"
                  },
                  "customer.birthDate": {
                    "description": "The customer's birth date in the yyyy-MM-dd format.",
                    "type": "string",
                    "format": "yyyy-MM-dd",
                    "example": "1970-02-17"
                  },
                  "customer.ip": {
                    "description": "The customer's IP address.",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,255}",
                    "example": "192.168.1.1"
                  },
                  "customer.phone": {
                    "description": "The customer's phone number.",
                    "type": "string",
                    "maxLength": 24,
                    "minLength": 5,
                    "format": "[+0-9][0-9 \\.()/-]{5,24}",
                    "example": 27123456789
                  },
                  "customer.idNumber": {
                    "description": "The customer's ID number, required for high-risk merchants supporting Capitec Pay.",
                    "type": "string",
                    "maxLength": 13,
                    "minLength": 13,
                    "format": "[\\s\\S]{13,13}",
                    "example": "9001010000084"
                  },
                  "billing.street1": {
                    "description": "The door number, floor, building number, building name, and/or street name of the billing address.",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,100}",
                    "example": "1 Example Road"
                  },
                  "billing.street2": {
                    "description": "The adjoining road or locality, if required, of the billing address.",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,100}",
                    "example": "LocalityA"
                  },
                  "billing.city": {
                    "description": "The town, district, or city of the billing address.",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,80}",
                    "example": "Cape Town"
                  },
                  "billing.company": {
                    "description": "The company of the billing address.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,64}",
                    "example": "CompanyA"
                  },
                  "billing.country": {
                    "description": "The country of the billing address (ISO 3166-1).",
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 3,
                    "format": "ISO 3166-1",
                    "example": "ZA"
                  },
                  "billing.state": {
                    "description": "The county, state, or region of the billing address.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,50}",
                    "example": "Western Cape"
                  },
                  "billing.postcode": {
                    "description": "The postal code or ZIP code of the billing address.",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,30}",
                    "example": "1234"
                  },
                  "shipping.street1": {
                    "description": "The door number, floor, building number, building name, and/or street name of the shipping address.",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,100}",
                    "example": "1 Example Road"
                  },
                  "shipping.street2": {
                    "description": "The adjoining road or locality, if required, of the shipping address.",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,100}",
                    "example": "LocalityA"
                  },
                  "shipping.city": {
                    "description": "The town, district, or city of the shipping address.",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,80}",
                    "example": "Cape Town"
                  },
                  "shipping.company": {
                    "description": "The company of the shipping address.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,64}",
                    "example": "CompanyA"
                  },
                  "shipping.postcode": {
                    "description": "The postal code or ZIP code of the shipping address.",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,30}",
                    "example": "1234"
                  },
                  "shipping.country": {
                    "description": "The country of the shipping address (ISO 3166-1).",
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 3,
                    "format": "ISO 3166-1",
                    "example": "ZA"
                  },
                  "shipping.state": {
                    "description": "The county, state, or region of the shipping address.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,50}",
                    "example": "Western Cape"
                  },
                  "cart.tax": {
                    "description": "The tax percentage applied to the price of the item in the shopping cart.",
                    "type": "string",
                    "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
                    "example": "15.00"
                  },
                  "cart.shippingAmount": {
                    "description": "The total amount of the cart item including quantity.",
                    "type": "string",
                    "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
                    "example": "12.25"
                  },
                  "cart.discount": {
                    "description": "Discount amount applied on order amount.",
                    "type": "string",
                    "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
                    "example": "02.25"
                  },
                  "createRegistration": {
                    "description": "Used to enable [card tokenisation](https://developer.peachpayments.com/docs/checkout-tokenisation) when customer pays with card. You must get permission from your customer before tokenising their cards.\n\nCannot be `true` if `allowStoringDetails` is true.\n",
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ],
                    "example": "false"
                  },
                  "cardTokens": {
                    "description": "List of comma-separated card tokens. The card tokens must be linked to the customer as they enable one-click payment support for the customer. See the [documentation](https://developer.peachpayments.com/docs/checkout-tokenisation) for more information.",
                    "type": "string",
                    "example": "8ac7a49f8e9f15d2018ea09b285f0eaa,8ac7a49f8e9f15d2018ea09b285f0acc"
                  },
                  "allowStoringDetails": {
                    "description": "Allow the customer to store their card details for future use. When this is set, the customer is given an option to tokenise their card during checkout.\n\nIf the customer chooses to store their card details, a `registrationId` is returned in the response from checkout. Similar to `createRegistration`.\n\nCannot be `true` if `createRegistration` is true.\n\nSee the [documentation](https://developer.peachpayments.com/docs/checkout-tokenisation) for more information.\n",
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ],
                    "example": "false"
                  },
                  "originator": {
                    "description": "Used to provide a name for the application that is creating the checkout instance.",
                    "type": "string",
                    "maxLength": 100,
                    "example": "Webstore"
                  },
                  "returnTo": {
                    "description": "Text to display on \"Return to Store\" button on completing checkout.",
                    "type": "string",
                    "enum": [
                      "STORE",
                      "INVOICE"
                    ]
                  }
                },
                "required": [
                  "authentication.entityId",
                  "signature",
                  "merchantTransactionId",
                  "amount",
                  "paymentType",
                  "currency",
                  "nonce",
                  "shopperResultUrl"
                ]
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "authentication.entityId": {
                    "description": "The entity for the request. By default, this is the channel ID.",
                    "type": "string",
                    "maxLength": 32,
                    "example": "8ac7a4ca68c22c4d0168c2caab2e0025"
                  },
                  "signature": {
                    "description": "Token to verify the integrity of the payment, ensuring that only the merchant sending the request is accepted.",
                    "type": "string",
                    "maxLength": 64,
                    "example": "a668342244a9c77b08a2f9090d033d6e2610b431a5c0ca975f32035ed06164f4"
                  },
                  "merchantTransactionId": {
                    "description": "Merchant-provided reference number unique for your transactions.",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 8,
                    "format": "8-16",
                    "example": "OrderNo453432"
                  },
                  "amount": {
                    "description": "The amount of the payment request. The period is used as the decimal separator.\n\nAn amount of 0 is only supported when the `paymentType` is `PA` and `createRegistration` is set to `true`.\n\nM-PESA does not support decimal amounts, so Checkout automatically rounds them up.\n",
                    "type": "string",
                    "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
                    "example": "1010.22"
                  },
                  "paymentType": {
                    "description": "The payment type for the request.\n\nDoes not accept `RG`, but you can tokenise a card by performing a DB or PA with `createRegistration`.\n\nPA is only supported when `forceDefaultMethod` is set to `true` and `defaultPaymentMethod` is `CARD`.\nFollowing a PA, you can either [capture](https://developer.peachpayments.com/docs/card-manage-payments#capture-a-preauthorisation) or [reverse](https://developer.peachpayments.com/docs/card-manage-payments#reverse-a-preauthorisation) the PA.\n\nRefund transactions through the Dashboard or as described in the [documentation](https://developer.peachpayments.com/docs/checkout-refund).\n",
                    "type": "string",
                    "enum": [
                      "DB",
                      "PA"
                    ],
                    "example": "DB"
                  },
                  "currency": {
                    "description": "The currency code of the payment request amount.",
                    "type": "string",
                    "enum": [
                      "ZAR",
                      "USD",
                      "KES",
                      "MUR",
                      "GBP",
                      "EUR"
                    ],
                    "example": "ZAR"
                  },
                  "nonce": {
                    "description": "Unique value to represent each request.",
                    "type": "string",
                    "example": "UNQ00012345678",
                    "maxLength": 64,
                    "format": "string (1-64)"
                  },
                  "shopperResultUrl": {
                    "description": "Checkout uses a POST request to redirect the customer to this URL after the customer completes checkout. Must be a valid URL that can be accessed through a browser.",
                    "type": "string",
                    "format": "string (6-2048)",
                    "example": "https://mydemostore.com/OrderNo453432"
                  },
                  "defaultPaymentMethod": {
                    "description": "The preferred payment method which is active in the checkout page at the point of redirecting.",
                    "type": "string",
                    "enum": [
                      "CARD",
                      "MASTERPASS",
                      "MOBICRED",
                      "MPESA",
                      "1FORYOU",
                      "APLUS",
                      "PAYPAL",
                      "ZEROPAY",
                      "PAYFLEX",
                      "BLINKBYEMTEL",
                      "CAPITECPAY",
                      "PAYBYBANK",
                      "APPLE PAY",
                      "GOOGLEPAY",
                      "SAMSUNGPAY",
                      "MCBJUICE",
                      "RCS",
                      "FLOAT",
                      "HAPPYPAY"
                    ],
                    "example": "CARD"
                  },
                  "forceDefaultMethod": {
                    "description": "Force the default payment method to be the only payment method.",
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ],
                    "example": "false",
                    "default": "false"
                  },
                  "merchantInvoiceId": {
                    "description": "Merchant-provided invoice number unique for your transactions. This identifier is not sent onwards.",
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 255,
                    "format": "string (8-255)",
                    "example": "INV-0001"
                  },
                  "cancelUrl": {
                    "description": "The customer is redirected to this URL if they cancel checkout. It must be a valid URL that can be reached through a browser. To enable the `cancelUrl` parameter, [contact support](https://support.peachpayments.com/support/tickets/new).",
                    "type": "string",
                    "format": "string (6-2048)",
                    "example": "https://example.com/OrderNo453432/cancelled"
                  },
                  "notificationUrl": {
                    "description": "Peach Payments sends a webhook to this URL for any changes to this checkout instance, in addition to the webhook sent to the preconfigured URL.",
                    "type": "string",
                    "format": "string (6-2048)",
                    "example": "https://example.com/OrderNo453432/webhook"
                  },
                  "customParameters[name]": {
                    "description": "A name value pair used for sending custom information. To display custom parameters in the Peach Payments Dashboard > transaction details panel > **More details** tab, use the `customParameters[auxData]:\"{\\\"user_id\\\":\\\"12345\\\",\\\"paymentId\\\":\\\"98765\\\"}\"` format, changing the parameters as required.",
                    "type": "string",
                    "format": "name: [a-zA-Z0-9\\._]{3,64} value: [\\s\\S]{0,2048}",
                    "example": "name: Name1 value: Value1"
                  },
                  "customer.merchantCustomerId": {
                    "description": "An identifier for this customer. Typically this is the ID that identifies the shopper in the shop's system.",
                    "type": "string",
                    "maxLength": 48,
                    "minLength": 0,
                    "format": "[\\s\\S]{0,48}",
                    "example": "971020"
                  },
                  "customer.givenName": {
                    "description": "The customer's first name or given name.\n\nRequired if you send in any other customer parameters, and for some risk checks and payment providers.\n\nPeach Payments recommends including the name so that it displays in the Peach Dashboard and is available for subsequent queries.\n\nTruncated after 48 characters.\n",
                    "type": "string",
                    "maxLength": 48,
                    "minLength": 0,
                    "format": "[\\s\\S]{0,48}",
                    "example": "John"
                  },
                  "customer.surname": {
                    "description": "The customer's last name or surname.\n\nRequired if you send in any other customer parameters, and for some risk checks and payment providers.\n\nPeach Payments recommends including the surname so that it displays in the Peach Dashboard and is available for subsequent queries.\n\nTruncated after 48 characters.\n",
                    "type": "string",
                    "maxLength": 48,
                    "minLength": 0,
                    "format": "[\\s\\S]{0,48}",
                    "example": "Smith"
                  },
                  "customer.mobile": {
                    "description": "The customer's mobile number.",
                    "type": "string",
                    "maxLength": 24,
                    "minLength": 5,
                    "format": "[+0-9][0-9 \\.()/-]{5,24}",
                    "example": "+27123456789"
                  },
                  "customer.email": {
                    "description": "The customer's email address.",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 6,
                    "format": "[\\s\\S]{6,128}",
                    "example": "johnsmith@example.com"
                  },
                  "customer.status": {
                    "description": "The customer's status. Accepts `NEW` or `EXISTING`.",
                    "type": "string",
                    "enum": [
                      "NEW",
                      "EXISTING"
                    ],
                    "example": "EXISTING"
                  },
                  "customer.birthDate": {
                    "description": "The customer's birth date in the yyyy-MM-dd format.",
                    "type": "string",
                    "format": "yyyy-MM-dd",
                    "example": "1970-02-17"
                  },
                  "customer.ip": {
                    "description": "The customer's IP address.",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,255}",
                    "example": "192.168.1.1"
                  },
                  "customer.phone": {
                    "description": "The customer's phone number.",
                    "type": "string",
                    "maxLength": 24,
                    "minLength": 5,
                    "format": "[+0-9][0-9 \\.()/-]{5,24}",
                    "example": 27123456789
                  },
                  "customer.idNumber": {
                    "description": "The customer's ID number, required for high-risk merchants supporting Capitec Pay.",
                    "type": "string",
                    "maxLength": 13,
                    "minLength": 13,
                    "format": "[\\s\\S]{13,13}",
                    "example": "9001010000084"
                  },
                  "billing.street1": {
                    "description": "The door number, floor, building number, building name, and/or street name of the billing address.",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,100}",
                    "example": "1 Example Road"
                  },
                  "billing.street2": {
                    "description": "The adjoining road or locality, if required, of the billing address.",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,100}",
                    "example": "LocalityA"
                  },
                  "billing.city": {
                    "description": "The town, district, or city of the billing address.",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,80}",
                    "example": "Cape Town"
                  },
                  "billing.company": {
                    "description": "The company of the billing address.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,64}",
                    "example": "CompanyA"
                  },
                  "billing.country": {
                    "description": "The country of the billing address (ISO 3166-1).",
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 3,
                    "format": "ISO 3166-1",
                    "example": "ZA"
                  },
                  "billing.state": {
                    "description": "The county, state, or region of the billing address.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,50}",
                    "example": "Western Cape"
                  },
                  "billing.postcode": {
                    "description": "The postal code or ZIP code of the billing address.",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,30}",
                    "example": "1234"
                  },
                  "shipping.street1": {
                    "description": "The door number, floor, building number, building name, and/or street name of the shipping address.",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,100}",
                    "example": "1 Example Road"
                  },
                  "shipping.street2": {
                    "description": "The adjoining road or locality, if required, of the shipping address.",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,100}",
                    "example": "LocalityA"
                  },
                  "shipping.city": {
                    "description": "The town, district, or city of the shipping address.",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,80}",
                    "example": "Cape Town"
                  },
                  "shipping.company": {
                    "description": "The company of the shipping address.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,64}",
                    "example": "CompanyA"
                  },
                  "shipping.postcode": {
                    "description": "The postal code or ZIP code of the shipping address.",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,30}",
                    "example": "1234"
                  },
                  "shipping.country": {
                    "description": "The country of the shipping address (ISO 3166-1).",
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 3,
                    "format": "ISO 3166-1",
                    "example": "ZA"
                  },
                  "shipping.state": {
                    "description": "The county, state, or region of the shipping address.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,50}",
                    "example": "Western Cape"
                  },
                  "cart.tax": {
                    "description": "The tax percentage applied to the price of the item in the shopping cart.",
                    "type": "string",
                    "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
                    "example": "15.00"
                  },
                  "cart.shippingAmount": {
                    "description": "The total amount of the cart item including quantity.",
                    "type": "string",
                    "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
                    "example": "12.25"
                  },
                  "cart.discount": {
                    "description": "Discount amount applied on order amount.",
                    "type": "string",
                    "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
                    "example": "02.25"
                  },
                  "createRegistration": {
                    "description": "Used to enable [card tokenisation](https://developer.peachpayments.com/docs/checkout-tokenisation) when customer pays with card. You must get permission from your customer before tokenising their cards.\n\nCannot be `true` if `allowStoringDetails` is true.\n",
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ],
                    "example": "false"
                  },
                  "cardTokens": {
                    "description": "List of comma-separated card tokens. The card tokens must be linked to the customer as they enable one-click payment support for the customer. See the [documentation](https://developer.peachpayments.com/docs/checkout-tokenisation) for more information.",
                    "type": "string",
                    "example": "8ac7a49f8e9f15d2018ea09b285f0eaa,8ac7a49f8e9f15d2018ea09b285f0acc"
                  },
                  "allowStoringDetails": {
                    "description": "Allow the customer to store their card details for future use. When this is set, the customer is given an option to tokenise their card during checkout.\n\nIf the customer chooses to store their card details, a `registrationId` is returned in the response from checkout. Similar to `createRegistration`.\n\nCannot be `true` if `createRegistration` is true.\n\nSee the [documentation](https://developer.peachpayments.com/docs/checkout-tokenisation) for more information.\n",
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ],
                    "example": "false"
                  },
                  "originator": {
                    "description": "Used to provide a name for the application that is creating the checkout instance.",
                    "type": "string",
                    "maxLength": 100,
                    "example": "Webstore"
                  },
                  "returnTo": {
                    "description": "Text to display on \"Return to Store\" button on completing checkout.",
                    "type": "string",
                    "enum": [
                      "STORE",
                      "INVOICE"
                    ]
                  }
                },
                "required": [
                  "authentication.entityId",
                  "signature",
                  "merchantTransactionId",
                  "amount",
                  "paymentType",
                  "currency",
                  "nonce",
                  "shopperResultUrl"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Request processed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "redirectUrl": {
                      "type": "string",
                      "format": "url",
                      "description": "Redirect the user to this URL to complete their payment."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid authentication information."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/checkout": {
      "post": {
        "summary": "Initiate Checkout",
        "description": "Load the Checkout frontend to complete a payment. The POST request contains the entityId, signature, purchase parameters, and any custom parameters that a merchant optionally sends.\n\nSign the data on the backend and execute the POST from the browser.\n\nFor more information, see the [documentation](https://developer.peachpayments.com/docs/checkout-payment#form-post-checkout).\n",
        "tags": [
          "Checkout generation"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Referer",
            "description": "An allowlisted domain for the merchant.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "https://example.com"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "authentication.entityId": {
                    "description": "The entity for the request. By default, this is the channel ID.",
                    "type": "string",
                    "maxLength": 32,
                    "example": "8ac7a4ca68c22c4d0168c2caab2e0025"
                  },
                  "signature": {
                    "description": "Token to verify the integrity of the payment, ensuring that only the merchant sending the request is accepted.",
                    "type": "string",
                    "maxLength": 64,
                    "example": "a668342244a9c77b08a2f9090d033d6e2610b431a5c0ca975f32035ed06164f4"
                  },
                  "merchantTransactionId": {
                    "description": "Merchant-provided reference number unique for your transactions.",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 8,
                    "format": "8-16",
                    "example": "OrderNo453432"
                  },
                  "amount": {
                    "description": "The amount of the payment request. The period is used as the decimal separator.\n\nAn amount of 0 is only supported when the `paymentType` is `PA` and `createRegistration` is set to `true`.\n\nM-PESA does not support decimal amounts, so Checkout automatically rounds them up.\n",
                    "type": "string",
                    "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
                    "example": "1010.22"
                  },
                  "paymentType": {
                    "description": "The payment type for the request.\n\nDoes not accept `RG`, but you can tokenise a card by performing a DB or PA with `createRegistration`.\n\nPA is only supported when `forceDefaultMethod` is set to `true` and `defaultPaymentMethod` is `CARD`.\nFollowing a PA, you can either [capture](https://developer.peachpayments.com/docs/card-manage-payments#capture-a-preauthorisation) or [reverse](https://developer.peachpayments.com/docs/card-manage-payments#reverse-a-preauthorisation) the PA.\n\nRefund transactions through the Dashboard or as described in the [documentation](https://developer.peachpayments.com/docs/checkout-refund).\n",
                    "type": "string",
                    "enum": [
                      "DB",
                      "PA"
                    ],
                    "example": "DB"
                  },
                  "currency": {
                    "description": "The currency code of the payment request amount.",
                    "type": "string",
                    "enum": [
                      "ZAR",
                      "USD",
                      "KES",
                      "MUR",
                      "GBP",
                      "EUR"
                    ],
                    "example": "ZAR"
                  },
                  "nonce": {
                    "description": "Unique value to represent each request.",
                    "type": "string",
                    "example": "UNQ00012345678",
                    "maxLength": 64,
                    "format": "string (1-64)"
                  },
                  "shopperResultUrl": {
                    "description": "Checkout uses a POST request to redirect the customer to this URL after the customer completes checkout. Must be a valid URL that can be accessed through a browser.",
                    "type": "string",
                    "format": "string (6-2048)",
                    "example": "https://mydemostore.com/OrderNo453432"
                  },
                  "defaultPaymentMethod": {
                    "description": "The preferred payment method which is active in the checkout page at the point of redirecting.",
                    "type": "string",
                    "enum": [
                      "CARD",
                      "MASTERPASS",
                      "MOBICRED",
                      "MPESA",
                      "1FORYOU",
                      "APLUS",
                      "PAYPAL",
                      "ZEROPAY",
                      "PAYFLEX",
                      "BLINKBYEMTEL",
                      "CAPITECPAY",
                      "PAYBYBANK",
                      "APPLE PAY",
                      "GOOGLEPAY",
                      "SAMSUNGPAY",
                      "MCBJUICE",
                      "RCS",
                      "FLOAT",
                      "HAPPYPAY"
                    ],
                    "example": "CARD"
                  },
                  "forceDefaultMethod": {
                    "description": "Force the default payment method to be the only payment method.",
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ],
                    "example": "false",
                    "default": "false"
                  },
                  "merchantInvoiceId": {
                    "description": "Merchant-provided invoice number unique for your transactions. This identifier is not sent onwards.",
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 255,
                    "format": "string (8-255)",
                    "example": "INV-0001"
                  },
                  "cancelUrl": {
                    "description": "The customer is redirected to this URL if they cancel checkout. It must be a valid URL that can be reached through a browser. To enable the `cancelUrl` parameter, [contact support](https://support.peachpayments.com/support/tickets/new).",
                    "type": "string",
                    "format": "string (6-2048)",
                    "example": "https://example.com/OrderNo453432/cancelled"
                  },
                  "notificationUrl": {
                    "description": "Peach Payments sends a webhook to this URL for any changes to this checkout instance, in addition to the webhook sent to the preconfigured URL.",
                    "type": "string",
                    "format": "string (6-2048)",
                    "example": "https://example.com/OrderNo453432/webhook"
                  },
                  "customParameters[name]": {
                    "description": "A name value pair used for sending custom information. To display custom parameters in the Peach Payments Dashboard > transaction details panel > **More details** tab, use the `customParameters[auxData]:\"{\\\"user_id\\\":\\\"12345\\\",\\\"paymentId\\\":\\\"98765\\\"}\"` format, changing the parameters as required.",
                    "type": "string",
                    "format": "name: [a-zA-Z0-9\\._]{3,64} value: [\\s\\S]{0,2048}",
                    "example": "name: Name1 value: Value1"
                  },
                  "customer.merchantCustomerId": {
                    "description": "An identifier for this customer. Typically this is the ID that identifies the shopper in the shop's system.",
                    "type": "string",
                    "maxLength": 48,
                    "minLength": 0,
                    "format": "[\\s\\S]{0,48}",
                    "example": "971020"
                  },
                  "customer.givenName": {
                    "description": "The customer's first name or given name.\n\nRequired if you send in any other customer parameters, and for some risk checks and payment providers.\n\nPeach Payments recommends including the name so that it displays in the Peach Dashboard and is available for subsequent queries.\n\nTruncated after 48 characters.\n",
                    "type": "string",
                    "maxLength": 48,
                    "minLength": 0,
                    "format": "[\\s\\S]{0,48}",
                    "example": "John"
                  },
                  "customer.surname": {
                    "description": "The customer's last name or surname.\n\nRequired if you send in any other customer parameters, and for some risk checks and payment providers.\n\nPeach Payments recommends including the surname so that it displays in the Peach Dashboard and is available for subsequent queries.\n\nTruncated after 48 characters.\n",
                    "type": "string",
                    "maxLength": 48,
                    "minLength": 0,
                    "format": "[\\s\\S]{0,48}",
                    "example": "Smith"
                  },
                  "customer.mobile": {
                    "description": "The customer's mobile number.",
                    "type": "string",
                    "maxLength": 24,
                    "minLength": 5,
                    "format": "[+0-9][0-9 \\.()/-]{5,24}",
                    "example": "+27123456789"
                  },
                  "customer.email": {
                    "description": "The customer's email address.",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 6,
                    "format": "[\\s\\S]{6,128}",
                    "example": "johnsmith@example.com"
                  },
                  "customer.status": {
                    "description": "The customer's status. Accepts `NEW` or `EXISTING`.",
                    "type": "string",
                    "enum": [
                      "NEW",
                      "EXISTING"
                    ],
                    "example": "EXISTING"
                  },
                  "customer.birthDate": {
                    "description": "The customer's birth date in the yyyy-MM-dd format.",
                    "type": "string",
                    "format": "yyyy-MM-dd",
                    "example": "1970-02-17"
                  },
                  "customer.ip": {
                    "description": "The customer's IP address.",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,255}",
                    "example": "192.168.1.1"
                  },
                  "customer.phone": {
                    "description": "The customer's phone number.",
                    "type": "string",
                    "maxLength": 24,
                    "minLength": 5,
                    "format": "[+0-9][0-9 \\.()/-]{5,24}",
                    "example": 27123456789
                  },
                  "customer.idNumber": {
                    "description": "The customer's ID number, required for high-risk merchants supporting Capitec Pay.",
                    "type": "string",
                    "maxLength": 13,
                    "minLength": 13,
                    "format": "[\\s\\S]{13,13}",
                    "example": "9001010000084"
                  },
                  "billing.street1": {
                    "description": "The door number, floor, building number, building name, and/or street name of the billing address.",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,100}",
                    "example": "1 Example Road"
                  },
                  "billing.street2": {
                    "description": "The adjoining road or locality, if required, of the billing address.",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,100}",
                    "example": "LocalityA"
                  },
                  "billing.city": {
                    "description": "The town, district, or city of the billing address.",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,80}",
                    "example": "Cape Town"
                  },
                  "billing.company": {
                    "description": "The company of the billing address.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,64}",
                    "example": "CompanyA"
                  },
                  "billing.country": {
                    "description": "The country of the billing address (ISO 3166-1).",
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 3,
                    "format": "ISO 3166-1",
                    "example": "ZA"
                  },
                  "billing.state": {
                    "description": "The county, state, or region of the billing address.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,50}",
                    "example": "Western Cape"
                  },
                  "billing.postcode": {
                    "description": "The postal code or ZIP code of the billing address.",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,30}",
                    "example": "1234"
                  },
                  "shipping.street1": {
                    "description": "The door number, floor, building number, building name, and/or street name of the shipping address.",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,100}",
                    "example": "1 Example Road"
                  },
                  "shipping.street2": {
                    "description": "The adjoining road or locality, if required, of the shipping address.",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,100}",
                    "example": "LocalityA"
                  },
                  "shipping.city": {
                    "description": "The town, district, or city of the shipping address.",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,80}",
                    "example": "Cape Town"
                  },
                  "shipping.company": {
                    "description": "The company of the shipping address.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,64}",
                    "example": "CompanyA"
                  },
                  "shipping.postcode": {
                    "description": "The postal code or ZIP code of the shipping address.",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,30}",
                    "example": "1234"
                  },
                  "shipping.country": {
                    "description": "The country of the shipping address (ISO 3166-1).",
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 3,
                    "format": "ISO 3166-1",
                    "example": "ZA"
                  },
                  "shipping.state": {
                    "description": "The county, state, or region of the shipping address.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,50}",
                    "example": "Western Cape"
                  },
                  "cart.tax": {
                    "description": "The tax percentage applied to the price of the item in the shopping cart.",
                    "type": "string",
                    "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
                    "example": "15.00"
                  },
                  "cart.shippingAmount": {
                    "description": "The total amount of the cart item including quantity.",
                    "type": "string",
                    "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
                    "example": "12.25"
                  },
                  "cart.discount": {
                    "description": "Discount amount applied on order amount.",
                    "type": "string",
                    "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
                    "example": "02.25"
                  },
                  "createRegistration": {
                    "description": "Used to enable [card tokenisation](https://developer.peachpayments.com/docs/checkout-tokenisation) when customer pays with card. You must get permission from your customer before tokenising their cards.\n\nCannot be `true` if `allowStoringDetails` is true.\n",
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ],
                    "example": "false"
                  },
                  "cardTokens": {
                    "description": "List of comma-separated card tokens. The card tokens must be linked to the customer as they enable one-click payment support for the customer. See the [documentation](https://developer.peachpayments.com/docs/checkout-tokenisation) for more information.",
                    "type": "string",
                    "example": "8ac7a49f8e9f15d2018ea09b285f0eaa,8ac7a49f8e9f15d2018ea09b285f0acc"
                  },
                  "allowStoringDetails": {
                    "description": "Allow the customer to store their card details for future use. When this is set, the customer is given an option to tokenise their card during checkout.\n\nIf the customer chooses to store their card details, a `registrationId` is returned in the response from checkout. Similar to `createRegistration`.\n\nCannot be `true` if `createRegistration` is true.\n\nSee the [documentation](https://developer.peachpayments.com/docs/checkout-tokenisation) for more information.\n",
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ],
                    "example": "false"
                  },
                  "originator": {
                    "description": "Used to provide a name for the application that is creating the checkout instance.",
                    "type": "string",
                    "maxLength": 100,
                    "example": "Webstore"
                  },
                  "returnTo": {
                    "description": "Text to display on \"Return to Store\" button on completing checkout.",
                    "type": "string",
                    "enum": [
                      "STORE",
                      "INVOICE"
                    ]
                  }
                },
                "required": [
                  "authentication.entityId",
                  "signature",
                  "merchantTransactionId",
                  "amount",
                  "paymentType",
                  "currency",
                  "nonce",
                  "shopperResultUrl"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Checkout successfully created.",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string",
                  "description": "The checkout frontend HTML page."
                }
              }
            }
          },
          "400": {
            "description": "A validation error has occurred with Checkout.",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string",
                  "description": "An error page detailing the error that has occured."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "callbacks": {
          "Checkout created": {
            "{$request.body#/notificationUrl}": {
              "post": {
                "description": "Checkout created for request.",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/x-www-form-urlencoded": {
                      "schema": {
                        "description": "Webhook sent when a checkout instance is created.",
                        "allOf": [
                          {
                            "description": "The base model for webhooks.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "amount": {
                                "description": "The amount of the payment request. The period is used as the decimal separator. M-PESA does not support decimal amounts, so Checkout automatically rounds them up.",
                                "type": "string",
                                "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
                                "example": 1010.22
                              },
                              "checkoutId": {
                                "type": "string",
                                "example": "948cc8dec52a11eb85290242ac130003",
                                "maxLength": 64,
                                "description": "Checkout ID."
                              },
                              "currency": {
                                "description": "The currency code of the payment request amount.",
                                "type": "string",
                                "enum": [
                                  "ZAR",
                                  "USD",
                                  "KES",
                                  "MUR",
                                  "GBP",
                                  "EUR"
                                ],
                                "example": "ZAR"
                              },
                              "merchantTransactionId": {
                                "description": "Merchant-provided reference number unique for your transactions.",
                                "type": "string",
                                "maxLength": 16,
                                "minLength": 8,
                                "format": "8-16",
                                "example": "OrderNo453432"
                              },
                              "paymentType": {
                                "description": "The payment type for the request.",
                                "type": "string",
                                "enum": [
                                  "DB",
                                  "PA"
                                ],
                                "example": "DB"
                              },
                              "result.code": {
                                "type": "string",
                                "description": "A code representing the checkout state."
                              },
                              "result.description": {
                                "type": "string",
                                "description": "A friendly message."
                              },
                              "signature": {
                                "description": "Token to verify the integrity of the webhook, ensuring the request is coming from Checkout.",
                                "type": "string",
                                "maxLength": 64,
                                "example": "a668342244a9c77b08a2f9090d033d6e2610b431a5c0ca975f32035ed06164f4"
                              },
                              "timestamp": {
                                "type": "string",
                                "description": "Date and time when the webhook was sent.",
                                "example": "2023-07-04T08:10:05Z"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "result.code": {
                                "type": "string",
                                "default": "000.200.100"
                              },
                              "result.description": {
                                "type": "string",
                                "default": "successfully created checkout"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Return this code if your service accepts the webhook."
                  }
                }
              }
            }
          },
          "Checkout cancelled": {
            "{$request.body#/notificationUrl}": {
              "post": {
                "description": "Checkout cancelled.",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/x-www-form-urlencoded": {
                      "schema": {
                        "description": "Webhook sent when a checkout instance is cancelled.",
                        "allOf": [
                          {
                            "description": "The base model for webhooks.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "amount": {
                                "description": "The amount of the payment request. The period is used as the decimal separator. M-PESA does not support decimal amounts, so Checkout automatically rounds them up.",
                                "type": "string",
                                "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
                                "example": 1010.22
                              },
                              "checkoutId": {
                                "type": "string",
                                "example": "948cc8dec52a11eb85290242ac130003",
                                "maxLength": 64,
                                "description": "Checkout ID."
                              },
                              "currency": {
                                "description": "The currency code of the payment request amount.",
                                "type": "string",
                                "enum": [
                                  "ZAR",
                                  "USD",
                                  "KES",
                                  "MUR",
                                  "GBP",
                                  "EUR"
                                ],
                                "example": "ZAR"
                              },
                              "merchantTransactionId": {
                                "description": "Merchant-provided reference number unique for your transactions.",
                                "type": "string",
                                "maxLength": 16,
                                "minLength": 8,
                                "format": "8-16",
                                "example": "OrderNo453432"
                              },
                              "paymentType": {
                                "description": "The payment type for the request.",
                                "type": "string",
                                "enum": [
                                  "DB",
                                  "PA"
                                ],
                                "example": "DB"
                              },
                              "result.code": {
                                "type": "string",
                                "description": "A code representing the checkout state."
                              },
                              "result.description": {
                                "type": "string",
                                "description": "A friendly message."
                              },
                              "signature": {
                                "description": "Token to verify the integrity of the webhook, ensuring the request is coming from Checkout.",
                                "type": "string",
                                "maxLength": 64,
                                "example": "a668342244a9c77b08a2f9090d033d6e2610b431a5c0ca975f32035ed06164f4"
                              },
                              "timestamp": {
                                "type": "string",
                                "description": "Date and time when the webhook was sent.",
                                "example": "2023-07-04T08:10:05Z"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "result.code": {
                                "type": "string",
                                "default": "100.396.101"
                              },
                              "result.description": {
                                "type": "string",
                                "default": "Cancelled by user"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Return this code if your service accepts the webhook."
                  }
                }
              }
            }
          },
          "Checkout uncertain": {
            "{$request.body#/notificationUrl}": {
              "post": {
                "description": "Checkout potentially cancelled.",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/x-www-form-urlencoded": {
                      "schema": {
                        "description": "Webhook sent when a checkout instance is potentially cancelled by a user.",
                        "allOf": [
                          {
                            "description": "The base model for webhooks.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "amount": {
                                "description": "The amount of the payment request. The period is used as the decimal separator. M-PESA does not support decimal amounts, so Checkout automatically rounds them up.",
                                "type": "string",
                                "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
                                "example": 1010.22
                              },
                              "checkoutId": {
                                "type": "string",
                                "example": "948cc8dec52a11eb85290242ac130003",
                                "maxLength": 64,
                                "description": "Checkout ID."
                              },
                              "currency": {
                                "description": "The currency code of the payment request amount.",
                                "type": "string",
                                "enum": [
                                  "ZAR",
                                  "USD",
                                  "KES",
                                  "MUR",
                                  "GBP",
                                  "EUR"
                                ],
                                "example": "ZAR"
                              },
                              "merchantTransactionId": {
                                "description": "Merchant-provided reference number unique for your transactions.",
                                "type": "string",
                                "maxLength": 16,
                                "minLength": 8,
                                "format": "8-16",
                                "example": "OrderNo453432"
                              },
                              "paymentType": {
                                "description": "The payment type for the request.",
                                "type": "string",
                                "enum": [
                                  "DB",
                                  "PA"
                                ],
                                "example": "DB"
                              },
                              "result.code": {
                                "type": "string",
                                "description": "A code representing the checkout state."
                              },
                              "result.description": {
                                "type": "string",
                                "description": "A friendly message."
                              },
                              "signature": {
                                "description": "Token to verify the integrity of the webhook, ensuring the request is coming from Checkout.",
                                "type": "string",
                                "maxLength": 64,
                                "example": "a668342244a9c77b08a2f9090d033d6e2610b431a5c0ca975f32035ed06164f4"
                              },
                              "timestamp": {
                                "type": "string",
                                "description": "Date and time when the webhook was sent.",
                                "example": "2023-07-04T08:10:05Z"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "result.code": {
                                "type": "string",
                                "default": "100.396.104"
                              },
                              "result.description": {
                                "type": "string",
                                "default": "Uncertain status - probably cancelled by user"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Return this code if your service accepts the webhook."
                  }
                }
              }
            }
          },
          "Checkout pending": {
            "{$request.body#/notificationUrl}": {
              "post": {
                "description": "Transaction created on the checkout instance.",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/x-www-form-urlencoded": {
                      "schema": {
                        "description": "Webhook sent when a transaction is created on a checkout instance.",
                        "allOf": [
                          {
                            "description": "The base model for webhooks.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "amount": {
                                "description": "The amount of the payment request. The period is used as the decimal separator. M-PESA does not support decimal amounts, so Checkout automatically rounds them up.",
                                "type": "string",
                                "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
                                "example": 1010.22
                              },
                              "checkoutId": {
                                "type": "string",
                                "example": "948cc8dec52a11eb85290242ac130003",
                                "maxLength": 64,
                                "description": "Checkout ID."
                              },
                              "currency": {
                                "description": "The currency code of the payment request amount.",
                                "type": "string",
                                "enum": [
                                  "ZAR",
                                  "USD",
                                  "KES",
                                  "MUR",
                                  "GBP",
                                  "EUR"
                                ],
                                "example": "ZAR"
                              },
                              "merchantTransactionId": {
                                "description": "Merchant-provided reference number unique for your transactions.",
                                "type": "string",
                                "maxLength": 16,
                                "minLength": 8,
                                "format": "8-16",
                                "example": "OrderNo453432"
                              },
                              "paymentType": {
                                "description": "The payment type for the request.",
                                "type": "string",
                                "enum": [
                                  "DB",
                                  "PA"
                                ],
                                "example": "DB"
                              },
                              "result.code": {
                                "type": "string",
                                "description": "A code representing the checkout state."
                              },
                              "result.description": {
                                "type": "string",
                                "description": "A friendly message."
                              },
                              "signature": {
                                "description": "Token to verify the integrity of the webhook, ensuring the request is coming from Checkout.",
                                "type": "string",
                                "maxLength": 64,
                                "example": "a668342244a9c77b08a2f9090d033d6e2610b431a5c0ca975f32035ed06164f4"
                              },
                              "timestamp": {
                                "type": "string",
                                "description": "Date and time when the webhook was sent.",
                                "example": "2023-07-04T08:10:05Z"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "The transaction ID.",
                                "type": "string"
                              },
                              "paymentBrand": {
                                "description": "The payment method which the customer is paying with.",
                                "type": "string",
                                "enum": [
                                  "VISA",
                                  "MASTERCARD",
                                  "DINERS CLUB",
                                  "AMERICAN EXPRESS",
                                  "MASTERPASS",
                                  "MOBICRED",
                                  "MPESA",
                                  "1FORYOU",
                                  "APLUS",
                                  "PAYPAL",
                                  "ZEROPAY",
                                  "PAYFLEX",
                                  "BLINKBYEMTEL",
                                  "CAPITECPAY",
                                  "PAYBYBANK",
                                  "MCBJUICE",
                                  "RCS",
                                  "FLOAT",
                                  "HAPPYPAY",
                                  "APPLE PAY",
                                  "GOOGLEPAY",
                                  "SAMSUNGPAY"
                                ],
                                "example": "VISA"
                              },
                              "result.code": {
                                "type": "string",
                                "default": "000.200.000"
                              },
                              "result.description": {
                                "type": "string",
                                "default": "transaction pending"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Return this code if your service accepts the webhook."
                  }
                }
              }
            }
          },
          "Checkout successful": {
            "{$request.body#/notificationUrl}": {
              "post": {
                "description": "Checkout completed successfully.",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/x-www-form-urlencoded": {
                      "schema": {
                        "description": "Webhook sent when a checkout instance is successfully completed.",
                        "allOf": [
                          {
                            "description": "Webhook sent when a transaction is created on a checkout instance.",
                            "allOf": [
                              {
                                "description": "The base model for webhooks.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "description": "The amount of the payment request. The period is used as the decimal separator. M-PESA does not support decimal amounts, so Checkout automatically rounds them up.",
                                    "type": "string",
                                    "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
                                    "example": 1010.22
                                  },
                                  "checkoutId": {
                                    "type": "string",
                                    "example": "948cc8dec52a11eb85290242ac130003",
                                    "maxLength": 64,
                                    "description": "Checkout ID."
                                  },
                                  "currency": {
                                    "description": "The currency code of the payment request amount.",
                                    "type": "string",
                                    "enum": [
                                      "ZAR",
                                      "USD",
                                      "KES",
                                      "MUR",
                                      "GBP",
                                      "EUR"
                                    ],
                                    "example": "ZAR"
                                  },
                                  "merchantTransactionId": {
                                    "description": "Merchant-provided reference number unique for your transactions.",
                                    "type": "string",
                                    "maxLength": 16,
                                    "minLength": 8,
                                    "format": "8-16",
                                    "example": "OrderNo453432"
                                  },
                                  "paymentType": {
                                    "description": "The payment type for the request.",
                                    "type": "string",
                                    "enum": [
                                      "DB",
                                      "PA"
                                    ],
                                    "example": "DB"
                                  },
                                  "result.code": {
                                    "type": "string",
                                    "description": "A code representing the checkout state."
                                  },
                                  "result.description": {
                                    "type": "string",
                                    "description": "A friendly message."
                                  },
                                  "signature": {
                                    "description": "Token to verify the integrity of the webhook, ensuring the request is coming from Checkout.",
                                    "type": "string",
                                    "maxLength": 64,
                                    "example": "a668342244a9c77b08a2f9090d033d6e2610b431a5c0ca975f32035ed06164f4"
                                  },
                                  "timestamp": {
                                    "type": "string",
                                    "description": "Date and time when the webhook was sent.",
                                    "example": "2023-07-04T08:10:05Z"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The transaction ID.",
                                    "type": "string"
                                  },
                                  "paymentBrand": {
                                    "description": "The payment method which the customer is paying with.",
                                    "type": "string",
                                    "enum": [
                                      "VISA",
                                      "MASTERCARD",
                                      "DINERS CLUB",
                                      "AMERICAN EXPRESS",
                                      "MASTERPASS",
                                      "MOBICRED",
                                      "MPESA",
                                      "1FORYOU",
                                      "APLUS",
                                      "PAYPAL",
                                      "ZEROPAY",
                                      "PAYFLEX",
                                      "BLINKBYEMTEL",
                                      "CAPITECPAY",
                                      "PAYBYBANK",
                                      "MCBJUICE",
                                      "RCS",
                                      "FLOAT",
                                      "HAPPYPAY",
                                      "APPLE PAY",
                                      "GOOGLEPAY",
                                      "SAMSUNGPAY"
                                    ],
                                    "example": "VISA"
                                  },
                                  "result.code": {
                                    "type": "string",
                                    "default": "000.200.000"
                                  },
                                  "result.description": {
                                    "type": "string",
                                    "default": "transaction pending"
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "merchant.name": {
                                "type": "string"
                              },
                              "recon.authCode": {
                                "type": "string"
                              },
                              "recon.resultCode": {
                                "type": "string"
                              },
                              "recon.rrn": {
                                "type": "string"
                              },
                              "result.code": {
                                "type": "string",
                                "default": "000.000.000"
                              },
                              "result.description": {
                                "type": "string",
                                "default": "Request successfully processed in 'Merchant in Integrator Test Mode'"
                              },
                              "resultDetails.AcquirerResponse": {
                                "type": "string"
                              },
                              "resultDetails.ConnectorTxID1": {
                                "type": "string"
                              },
                              "resultDetails.ExtendedDescription": {
                                "type": "string"
                              }
                            }
                          },
                          {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "card.bin": {
                                    "type": "string"
                                  },
                                  "card.holder": {
                                    "type": "string"
                                  },
                                  "card.last4Digits": {
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "paymentBrand": {
                                    "type": "string",
                                    "default": "MOBICRED"
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Return this code if your service accepts the webhook."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/checkout/validate": {
      "post": {
        "summary": "Validate Checkout request",
        "description": "Validate a request before trying to initiate a checkout session.",
        "tags": [
          "Checkout generation"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Referer",
            "description": "An allowlisted domain for the merchant.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "https://example.com"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "authentication.entityId": {
                    "description": "The entity for the request. By default, this is the channel ID.",
                    "type": "string",
                    "maxLength": 32,
                    "example": "8ac7a4ca68c22c4d0168c2caab2e0025"
                  },
                  "signature": {
                    "description": "Token to verify the integrity of the payment, ensuring that only the merchant sending the request is accepted.",
                    "type": "string",
                    "maxLength": 64,
                    "example": "a668342244a9c77b08a2f9090d033d6e2610b431a5c0ca975f32035ed06164f4"
                  },
                  "merchantTransactionId": {
                    "description": "Merchant-provided reference number unique for your transactions.",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 8,
                    "format": "8-16",
                    "example": "OrderNo453432"
                  },
                  "amount": {
                    "description": "The amount of the payment request. The period is used as the decimal separator.\n\nAn amount of 0 is only supported when the `paymentType` is `PA` and `createRegistration` is set to `true`.\n\nM-PESA does not support decimal amounts, so Checkout automatically rounds them up.\n",
                    "type": "string",
                    "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
                    "example": "1010.22"
                  },
                  "paymentType": {
                    "description": "The payment type for the request.\n\nDoes not accept `RG`, but you can tokenise a card by performing a DB or PA with `createRegistration`.\n\nPA is only supported when `forceDefaultMethod` is set to `true` and `defaultPaymentMethod` is `CARD`.\nFollowing a PA, you can either [capture](https://developer.peachpayments.com/docs/card-manage-payments#capture-a-preauthorisation) or [reverse](https://developer.peachpayments.com/docs/card-manage-payments#reverse-a-preauthorisation) the PA.\n\nRefund transactions through the Dashboard or as described in the [documentation](https://developer.peachpayments.com/docs/checkout-refund).\n",
                    "type": "string",
                    "enum": [
                      "DB",
                      "PA"
                    ],
                    "example": "DB"
                  },
                  "currency": {
                    "description": "The currency code of the payment request amount.",
                    "type": "string",
                    "enum": [
                      "ZAR",
                      "USD",
                      "KES",
                      "MUR",
                      "GBP",
                      "EUR"
                    ],
                    "example": "ZAR"
                  },
                  "nonce": {
                    "description": "Unique value to represent each request.",
                    "type": "string",
                    "example": "UNQ00012345678",
                    "maxLength": 64,
                    "format": "string (1-64)"
                  },
                  "shopperResultUrl": {
                    "description": "Checkout uses a POST request to redirect the customer to this URL after the customer completes checkout. Must be a valid URL that can be accessed through a browser.",
                    "type": "string",
                    "format": "string (6-2048)",
                    "example": "https://mydemostore.com/OrderNo453432"
                  },
                  "defaultPaymentMethod": {
                    "description": "The preferred payment method which is active in the checkout page at the point of redirecting.",
                    "type": "string",
                    "enum": [
                      "CARD",
                      "MASTERPASS",
                      "MOBICRED",
                      "MPESA",
                      "1FORYOU",
                      "APLUS",
                      "PAYPAL",
                      "ZEROPAY",
                      "PAYFLEX",
                      "BLINKBYEMTEL",
                      "CAPITECPAY",
                      "PAYBYBANK",
                      "APPLE PAY",
                      "GOOGLEPAY",
                      "SAMSUNGPAY",
                      "MCBJUICE",
                      "RCS",
                      "FLOAT",
                      "HAPPYPAY"
                    ],
                    "example": "CARD"
                  },
                  "forceDefaultMethod": {
                    "description": "Force the default payment method to be the only payment method.",
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ],
                    "example": "false",
                    "default": "false"
                  },
                  "merchantInvoiceId": {
                    "description": "Merchant-provided invoice number unique for your transactions. This identifier is not sent onwards.",
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 255,
                    "format": "string (8-255)",
                    "example": "INV-0001"
                  },
                  "cancelUrl": {
                    "description": "The customer is redirected to this URL if they cancel checkout. It must be a valid URL that can be reached through a browser. To enable the `cancelUrl` parameter, [contact support](https://support.peachpayments.com/support/tickets/new).",
                    "type": "string",
                    "format": "string (6-2048)",
                    "example": "https://example.com/OrderNo453432/cancelled"
                  },
                  "notificationUrl": {
                    "description": "Peach Payments sends a webhook to this URL for any changes to this checkout instance, in addition to the webhook sent to the preconfigured URL.",
                    "type": "string",
                    "format": "string (6-2048)",
                    "example": "https://example.com/OrderNo453432/webhook"
                  },
                  "customParameters[name]": {
                    "description": "A name value pair used for sending custom information. To display custom parameters in the Peach Payments Dashboard > transaction details panel > **More details** tab, use the `customParameters[auxData]:\"{\\\"user_id\\\":\\\"12345\\\",\\\"paymentId\\\":\\\"98765\\\"}\"` format, changing the parameters as required.",
                    "type": "string",
                    "format": "name: [a-zA-Z0-9\\._]{3,64} value: [\\s\\S]{0,2048}",
                    "example": "name: Name1 value: Value1"
                  },
                  "customer.merchantCustomerId": {
                    "description": "An identifier for this customer. Typically this is the ID that identifies the shopper in the shop's system.",
                    "type": "string",
                    "maxLength": 48,
                    "minLength": 0,
                    "format": "[\\s\\S]{0,48}",
                    "example": "971020"
                  },
                  "customer.givenName": {
                    "description": "The customer's first name or given name.\n\nRequired if you send in any other customer parameters, and for some risk checks and payment providers.\n\nPeach Payments recommends including the name so that it displays in the Peach Dashboard and is available for subsequent queries.\n\nTruncated after 48 characters.\n",
                    "type": "string",
                    "maxLength": 48,
                    "minLength": 0,
                    "format": "[\\s\\S]{0,48}",
                    "example": "John"
                  },
                  "customer.surname": {
                    "description": "The customer's last name or surname.\n\nRequired if you send in any other customer parameters, and for some risk checks and payment providers.\n\nPeach Payments recommends including the surname so that it displays in the Peach Dashboard and is available for subsequent queries.\n\nTruncated after 48 characters.\n",
                    "type": "string",
                    "maxLength": 48,
                    "minLength": 0,
                    "format": "[\\s\\S]{0,48}",
                    "example": "Smith"
                  },
                  "customer.mobile": {
                    "description": "The customer's mobile number.",
                    "type": "string",
                    "maxLength": 24,
                    "minLength": 5,
                    "format": "[+0-9][0-9 \\.()/-]{5,24}",
                    "example": "+27123456789"
                  },
                  "customer.email": {
                    "description": "The customer's email address.",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 6,
                    "format": "[\\s\\S]{6,128}",
                    "example": "johnsmith@example.com"
                  },
                  "customer.status": {
                    "description": "The customer's status. Accepts `NEW` or `EXISTING`.",
                    "type": "string",
                    "enum": [
                      "NEW",
                      "EXISTING"
                    ],
                    "example": "EXISTING"
                  },
                  "customer.birthDate": {
                    "description": "The customer's birth date in the yyyy-MM-dd format.",
                    "type": "string",
                    "format": "yyyy-MM-dd",
                    "example": "1970-02-17"
                  },
                  "customer.ip": {
                    "description": "The customer's IP address.",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,255}",
                    "example": "192.168.1.1"
                  },
                  "customer.phone": {
                    "description": "The customer's phone number.",
                    "type": "string",
                    "maxLength": 24,
                    "minLength": 5,
                    "format": "[+0-9][0-9 \\.()/-]{5,24}",
                    "example": 27123456789
                  },
                  "customer.idNumber": {
                    "description": "The customer's ID number, required for high-risk merchants supporting Capitec Pay.",
                    "type": "string",
                    "maxLength": 13,
                    "minLength": 13,
                    "format": "[\\s\\S]{13,13}",
                    "example": "9001010000084"
                  },
                  "billing.street1": {
                    "description": "The door number, floor, building number, building name, and/or street name of the billing address.",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,100}",
                    "example": "1 Example Road"
                  },
                  "billing.street2": {
                    "description": "The adjoining road or locality, if required, of the billing address.",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,100}",
                    "example": "LocalityA"
                  },
                  "billing.city": {
                    "description": "The town, district, or city of the billing address.",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,80}",
                    "example": "Cape Town"
                  },
                  "billing.company": {
                    "description": "The company of the billing address.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,64}",
                    "example": "CompanyA"
                  },
                  "billing.country": {
                    "description": "The country of the billing address (ISO 3166-1).",
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 3,
                    "format": "ISO 3166-1",
                    "example": "ZA"
                  },
                  "billing.state": {
                    "description": "The county, state, or region of the billing address.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,50}",
                    "example": "Western Cape"
                  },
                  "billing.postcode": {
                    "description": "The postal code or ZIP code of the billing address.",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,30}",
                    "example": "1234"
                  },
                  "shipping.street1": {
                    "description": "The door number, floor, building number, building name, and/or street name of the shipping address.",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,100}",
                    "example": "1 Example Road"
                  },
                  "shipping.street2": {
                    "description": "The adjoining road or locality, if required, of the shipping address.",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,100}",
                    "example": "LocalityA"
                  },
                  "shipping.city": {
                    "description": "The town, district, or city of the shipping address.",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,80}",
                    "example": "Cape Town"
                  },
                  "shipping.company": {
                    "description": "The company of the shipping address.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,64}",
                    "example": "CompanyA"
                  },
                  "shipping.postcode": {
                    "description": "The postal code or ZIP code of the shipping address.",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,30}",
                    "example": "1234"
                  },
                  "shipping.country": {
                    "description": "The country of the shipping address (ISO 3166-1).",
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 3,
                    "format": "ISO 3166-1",
                    "example": "ZA"
                  },
                  "shipping.state": {
                    "description": "The county, state, or region of the shipping address.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,50}",
                    "example": "Western Cape"
                  },
                  "cart.tax": {
                    "description": "The tax percentage applied to the price of the item in the shopping cart.",
                    "type": "string",
                    "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
                    "example": "15.00"
                  },
                  "cart.shippingAmount": {
                    "description": "The total amount of the cart item including quantity.",
                    "type": "string",
                    "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
                    "example": "12.25"
                  },
                  "cart.discount": {
                    "description": "Discount amount applied on order amount.",
                    "type": "string",
                    "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
                    "example": "02.25"
                  },
                  "createRegistration": {
                    "description": "Used to enable [card tokenisation](https://developer.peachpayments.com/docs/checkout-tokenisation) when customer pays with card. You must get permission from your customer before tokenising their cards.\n\nCannot be `true` if `allowStoringDetails` is true.\n",
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ],
                    "example": "false"
                  },
                  "cardTokens": {
                    "description": "List of comma-separated card tokens. The card tokens must be linked to the customer as they enable one-click payment support for the customer. See the [documentation](https://developer.peachpayments.com/docs/checkout-tokenisation) for more information.",
                    "type": "string",
                    "example": "8ac7a49f8e9f15d2018ea09b285f0eaa,8ac7a49f8e9f15d2018ea09b285f0acc"
                  },
                  "allowStoringDetails": {
                    "description": "Allow the customer to store their card details for future use. When this is set, the customer is given an option to tokenise their card during checkout.\n\nIf the customer chooses to store their card details, a `registrationId` is returned in the response from checkout. Similar to `createRegistration`.\n\nCannot be `true` if `createRegistration` is true.\n\nSee the [documentation](https://developer.peachpayments.com/docs/checkout-tokenisation) for more information.\n",
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ],
                    "example": "false"
                  },
                  "originator": {
                    "description": "Used to provide a name for the application that is creating the checkout instance.",
                    "type": "string",
                    "maxLength": 100,
                    "example": "Webstore"
                  },
                  "returnTo": {
                    "description": "Text to display on \"Return to Store\" button on completing checkout.",
                    "type": "string",
                    "enum": [
                      "STORE",
                      "INVOICE"
                    ]
                  }
                },
                "required": [
                  "authentication.entityId",
                  "signature",
                  "merchantTransactionId",
                  "amount",
                  "paymentType",
                  "currency",
                  "nonce",
                  "shopperResultUrl"
                ]
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "authentication.entityId": {
                    "description": "The entity for the request. By default, this is the channel ID.",
                    "type": "string",
                    "maxLength": 32,
                    "example": "8ac7a4ca68c22c4d0168c2caab2e0025"
                  },
                  "signature": {
                    "description": "Token to verify the integrity of the payment, ensuring that only the merchant sending the request is accepted.",
                    "type": "string",
                    "maxLength": 64,
                    "example": "a668342244a9c77b08a2f9090d033d6e2610b431a5c0ca975f32035ed06164f4"
                  },
                  "merchantTransactionId": {
                    "description": "Merchant-provided reference number unique for your transactions.",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 8,
                    "format": "8-16",
                    "example": "OrderNo453432"
                  },
                  "amount": {
                    "description": "The amount of the payment request. The period is used as the decimal separator.\n\nAn amount of 0 is only supported when the `paymentType` is `PA` and `createRegistration` is set to `true`.\n\nM-PESA does not support decimal amounts, so Checkout automatically rounds them up.\n",
                    "type": "string",
                    "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
                    "example": "1010.22"
                  },
                  "paymentType": {
                    "description": "The payment type for the request.\n\nDoes not accept `RG`, but you can tokenise a card by performing a DB or PA with `createRegistration`.\n\nPA is only supported when `forceDefaultMethod` is set to `true` and `defaultPaymentMethod` is `CARD`.\nFollowing a PA, you can either [capture](https://developer.peachpayments.com/docs/card-manage-payments#capture-a-preauthorisation) or [reverse](https://developer.peachpayments.com/docs/card-manage-payments#reverse-a-preauthorisation) the PA.\n\nRefund transactions through the Dashboard or as described in the [documentation](https://developer.peachpayments.com/docs/checkout-refund).\n",
                    "type": "string",
                    "enum": [
                      "DB",
                      "PA"
                    ],
                    "example": "DB"
                  },
                  "currency": {
                    "description": "The currency code of the payment request amount.",
                    "type": "string",
                    "enum": [
                      "ZAR",
                      "USD",
                      "KES",
                      "MUR",
                      "GBP",
                      "EUR"
                    ],
                    "example": "ZAR"
                  },
                  "nonce": {
                    "description": "Unique value to represent each request.",
                    "type": "string",
                    "example": "UNQ00012345678",
                    "maxLength": 64,
                    "format": "string (1-64)"
                  },
                  "shopperResultUrl": {
                    "description": "Checkout uses a POST request to redirect the customer to this URL after the customer completes checkout. Must be a valid URL that can be accessed through a browser.",
                    "type": "string",
                    "format": "string (6-2048)",
                    "example": "https://mydemostore.com/OrderNo453432"
                  },
                  "defaultPaymentMethod": {
                    "description": "The preferred payment method which is active in the checkout page at the point of redirecting.",
                    "type": "string",
                    "enum": [
                      "CARD",
                      "MASTERPASS",
                      "MOBICRED",
                      "MPESA",
                      "1FORYOU",
                      "APLUS",
                      "PAYPAL",
                      "ZEROPAY",
                      "PAYFLEX",
                      "BLINKBYEMTEL",
                      "CAPITECPAY",
                      "PAYBYBANK",
                      "APPLE PAY",
                      "GOOGLEPAY",
                      "SAMSUNGPAY",
                      "MCBJUICE",
                      "RCS",
                      "FLOAT",
                      "HAPPYPAY"
                    ],
                    "example": "CARD"
                  },
                  "forceDefaultMethod": {
                    "description": "Force the default payment method to be the only payment method.",
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ],
                    "example": "false",
                    "default": "false"
                  },
                  "merchantInvoiceId": {
                    "description": "Merchant-provided invoice number unique for your transactions. This identifier is not sent onwards.",
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 255,
                    "format": "string (8-255)",
                    "example": "INV-0001"
                  },
                  "cancelUrl": {
                    "description": "The customer is redirected to this URL if they cancel checkout. It must be a valid URL that can be reached through a browser. To enable the `cancelUrl` parameter, [contact support](https://support.peachpayments.com/support/tickets/new).",
                    "type": "string",
                    "format": "string (6-2048)",
                    "example": "https://example.com/OrderNo453432/cancelled"
                  },
                  "notificationUrl": {
                    "description": "Peach Payments sends a webhook to this URL for any changes to this checkout instance, in addition to the webhook sent to the preconfigured URL.",
                    "type": "string",
                    "format": "string (6-2048)",
                    "example": "https://example.com/OrderNo453432/webhook"
                  },
                  "customParameters[name]": {
                    "description": "A name value pair used for sending custom information. To display custom parameters in the Peach Payments Dashboard > transaction details panel > **More details** tab, use the `customParameters[auxData]:\"{\\\"user_id\\\":\\\"12345\\\",\\\"paymentId\\\":\\\"98765\\\"}\"` format, changing the parameters as required.",
                    "type": "string",
                    "format": "name: [a-zA-Z0-9\\._]{3,64} value: [\\s\\S]{0,2048}",
                    "example": "name: Name1 value: Value1"
                  },
                  "customer.merchantCustomerId": {
                    "description": "An identifier for this customer. Typically this is the ID that identifies the shopper in the shop's system.",
                    "type": "string",
                    "maxLength": 48,
                    "minLength": 0,
                    "format": "[\\s\\S]{0,48}",
                    "example": "971020"
                  },
                  "customer.givenName": {
                    "description": "The customer's first name or given name.\n\nRequired if you send in any other customer parameters, and for some risk checks and payment providers.\n\nPeach Payments recommends including the name so that it displays in the Peach Dashboard and is available for subsequent queries.\n\nTruncated after 48 characters.\n",
                    "type": "string",
                    "maxLength": 48,
                    "minLength": 0,
                    "format": "[\\s\\S]{0,48}",
                    "example": "John"
                  },
                  "customer.surname": {
                    "description": "The customer's last name or surname.\n\nRequired if you send in any other customer parameters, and for some risk checks and payment providers.\n\nPeach Payments recommends including the surname so that it displays in the Peach Dashboard and is available for subsequent queries.\n\nTruncated after 48 characters.\n",
                    "type": "string",
                    "maxLength": 48,
                    "minLength": 0,
                    "format": "[\\s\\S]{0,48}",
                    "example": "Smith"
                  },
                  "customer.mobile": {
                    "description": "The customer's mobile number.",
                    "type": "string",
                    "maxLength": 24,
                    "minLength": 5,
                    "format": "[+0-9][0-9 \\.()/-]{5,24}",
                    "example": "+27123456789"
                  },
                  "customer.email": {
                    "description": "The customer's email address.",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 6,
                    "format": "[\\s\\S]{6,128}",
                    "example": "johnsmith@example.com"
                  },
                  "customer.status": {
                    "description": "The customer's status. Accepts `NEW` or `EXISTING`.",
                    "type": "string",
                    "enum": [
                      "NEW",
                      "EXISTING"
                    ],
                    "example": "EXISTING"
                  },
                  "customer.birthDate": {
                    "description": "The customer's birth date in the yyyy-MM-dd format.",
                    "type": "string",
                    "format": "yyyy-MM-dd",
                    "example": "1970-02-17"
                  },
                  "customer.ip": {
                    "description": "The customer's IP address.",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,255}",
                    "example": "192.168.1.1"
                  },
                  "customer.phone": {
                    "description": "The customer's phone number.",
                    "type": "string",
                    "maxLength": 24,
                    "minLength": 5,
                    "format": "[+0-9][0-9 \\.()/-]{5,24}",
                    "example": 27123456789
                  },
                  "customer.idNumber": {
                    "description": "The customer's ID number, required for high-risk merchants supporting Capitec Pay.",
                    "type": "string",
                    "maxLength": 13,
                    "minLength": 13,
                    "format": "[\\s\\S]{13,13}",
                    "example": "9001010000084"
                  },
                  "billing.street1": {
                    "description": "The door number, floor, building number, building name, and/or street name of the billing address.",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,100}",
                    "example": "1 Example Road"
                  },
                  "billing.street2": {
                    "description": "The adjoining road or locality, if required, of the billing address.",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,100}",
                    "example": "LocalityA"
                  },
                  "billing.city": {
                    "description": "The town, district, or city of the billing address.",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,80}",
                    "example": "Cape Town"
                  },
                  "billing.company": {
                    "description": "The company of the billing address.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,64}",
                    "example": "CompanyA"
                  },
                  "billing.country": {
                    "description": "The country of the billing address (ISO 3166-1).",
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 3,
                    "format": "ISO 3166-1",
                    "example": "ZA"
                  },
                  "billing.state": {
                    "description": "The county, state, or region of the billing address.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,50}",
                    "example": "Western Cape"
                  },
                  "billing.postcode": {
                    "description": "The postal code or ZIP code of the billing address.",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,30}",
                    "example": "1234"
                  },
                  "shipping.street1": {
                    "description": "The door number, floor, building number, building name, and/or street name of the shipping address.",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,100}",
                    "example": "1 Example Road"
                  },
                  "shipping.street2": {
                    "description": "The adjoining road or locality, if required, of the shipping address.",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,100}",
                    "example": "LocalityA"
                  },
                  "shipping.city": {
                    "description": "The town, district, or city of the shipping address.",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,80}",
                    "example": "Cape Town"
                  },
                  "shipping.company": {
                    "description": "The company of the shipping address.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,64}",
                    "example": "CompanyA"
                  },
                  "shipping.postcode": {
                    "description": "The postal code or ZIP code of the shipping address.",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,30}",
                    "example": "1234"
                  },
                  "shipping.country": {
                    "description": "The country of the shipping address (ISO 3166-1).",
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 3,
                    "format": "ISO 3166-1",
                    "example": "ZA"
                  },
                  "shipping.state": {
                    "description": "The county, state, or region of the shipping address.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1,
                    "format": "[\\s\\S]{1,50}",
                    "example": "Western Cape"
                  },
                  "cart.tax": {
                    "description": "The tax percentage applied to the price of the item in the shopping cart.",
                    "type": "string",
                    "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
                    "example": "15.00"
                  },
                  "cart.shippingAmount": {
                    "description": "The total amount of the cart item including quantity.",
                    "type": "string",
                    "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
                    "example": "12.25"
                  },
                  "cart.discount": {
                    "description": "Discount amount applied on order amount.",
                    "type": "string",
                    "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
                    "example": "02.25"
                  },
                  "createRegistration": {
                    "description": "Used to enable [card tokenisation](https://developer.peachpayments.com/docs/checkout-tokenisation) when customer pays with card. You must get permission from your customer before tokenising their cards.\n\nCannot be `true` if `allowStoringDetails` is true.\n",
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ],
                    "example": "false"
                  },
                  "cardTokens": {
                    "description": "List of comma-separated card tokens. The card tokens must be linked to the customer as they enable one-click payment support for the customer. See the [documentation](https://developer.peachpayments.com/docs/checkout-tokenisation) for more information.",
                    "type": "string",
                    "example": "8ac7a49f8e9f15d2018ea09b285f0eaa,8ac7a49f8e9f15d2018ea09b285f0acc"
                  },
                  "allowStoringDetails": {
                    "description": "Allow the customer to store their card details for future use. When this is set, the customer is given an option to tokenise their card during checkout.\n\nIf the customer chooses to store their card details, a `registrationId` is returned in the response from checkout. Similar to `createRegistration`.\n\nCannot be `true` if `createRegistration` is true.\n\nSee the [documentation](https://developer.peachpayments.com/docs/checkout-tokenisation) for more information.\n",
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ],
                    "example": "false"
                  },
                  "originator": {
                    "description": "Used to provide a name for the application that is creating the checkout instance.",
                    "type": "string",
                    "maxLength": 100,
                    "example": "Webstore"
                  },
                  "returnTo": {
                    "description": "Text to display on \"Return to Store\" button on completing checkout.",
                    "type": "string",
                    "enum": [
                      "STORE",
                      "INVOICE"
                    ]
                  }
                },
                "required": [
                  "authentication.entityId",
                  "signature",
                  "merchantTransactionId",
                  "amount",
                  "paymentType",
                  "currency",
                  "nonce",
                  "shopperResultUrl"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Valid request."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "validation_errors": {
                          "type": "object",
                          "additionalProperties": true
                        }
                      },
                      "required": [
                        "validation_errors"
                      ]
                    }
                  ]
                },
                "examples": {
                  "Invalid body": {
                    "description": "Body format not supported.",
                    "value": {
                      "message": "Body is not in a valid format."
                    }
                  },
                  "Missing referer header": {
                    "description": "Referer header required.",
                    "value": {
                      "message": "Referer header is missing."
                    }
                  },
                  "Duplicate signature": {
                    "description": "The same signature has been received in the last 24 hours.",
                    "value": {
                      "message": "Duplicate signature."
                    }
                  },
                  "Mismatched signature": {
                    "description": "The received signature does not match the generated signature.",
                    "value": {
                      "message": "Signatures don't match."
                    }
                  },
                  "Invalid entity ID": {
                    "description": "Invalid entity ID.",
                    "value": {
                      "message": "Invalid entity ID."
                    }
                  },
                  "Merchant domain is not whitelisted": {
                    "description": "The domain the request was received from is not whitelisted for the merchant.",
                    "value": {
                      "message": "Merchant domain is not whitelisted."
                    }
                  },
                  "Validation Error": {
                    "description": "Validation error with the Checkout body.",
                    "value": {
                      "validation_errors": {
                        "amount": "amount is required"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/status": {
      "get": {
        "summary": "Query Checkout status",
        "description": "Get the status of a checkout instance.\n\nFor more information, see the [documentation](https://developer.peachpayments.com/docs/checkout-payment-status).\n",
        "tags": [
          "Status"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "authentication.entityId",
            "schema": {
              "type": "string",
              "example": "8ac7a4ca68c22c4d0168c2caab2e0025",
              "maxLength": 64
            },
            "description": "Merchant's entity ID.",
            "required": true
          },
          {
            "in": "query",
            "name": "checkoutId",
            "schema": {
              "type": "string",
              "example": "948cc8dec52a11eb85290242ac130003",
              "maxLength": 64
            },
            "description": "Checkout ID."
          },
          {
            "in": "query",
            "name": "merchantTransactionId",
            "schema": {
              "type": "string",
              "example": "OrderNo453432",
              "maxLength": 64
            },
            "description": "Merchant transaction ID."
          },
          {
            "in": "query",
            "name": "signature",
            "schema": {
              "type": "string",
              "example": "a668342244a9c77b08a2f9090d033d6e2610b431a5c0ca975f32035ed06164f4",
              "maxLength": 64
            },
            "description": "Signature of data signed with secret key of merchant.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "The status of the object.",
                      "type": "string",
                      "example": "PROCESSING"
                    },
                    "timestamp": {
                      "description": "The remaining time, in seconds, of the checkout instance.",
                      "type": "string",
                      "example": 1800
                    },
                    "redirect_url": {
                      "description": "Redirect URL for Checkout.",
                      "type": "string"
                    },
                    "redirect_post_data": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "description": "The checkout amount.",
                          "type": "string",
                          "example": "14.99"
                        },
                        "checkoutId": {
                          "type": "string",
                          "example": "948cc8dec52a11eb85290242ac130003"
                        },
                        "currency": {
                          "description": "The currency code of the payment request amount.",
                          "type": "string",
                          "enum": [
                            "ZAR",
                            "USD",
                            "KES",
                            "MUR",
                            "GBP",
                            "EUR"
                          ],
                          "example": "ZAR"
                        },
                        "merchantTransactionId": {
                          "type": "string",
                          "description": "The merchant transaction ID set when creating the checkout."
                        },
                        "paymentType": {
                          "type": "string",
                          "enum": [
                            "DB",
                            "PA"
                          ],
                          "example": "DB"
                        },
                        "result.code": {
                          "description": "A code representing the transaction state.",
                          "type": "string",
                          "example": "000.200.100"
                        },
                        "result.description": {
                          "description": "A friendly message.",
                          "type": "string",
                          "example": "Successfully created checkout."
                        },
                        "timestamp": {
                          "description": "Date and time when the checkout was created.",
                          "type": "string",
                          "example": "2021-06-17T14:22:22Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid state, check the body for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result.code": {
                      "description": "A code representing the error.",
                      "type": "string",
                      "example": "200.300.404"
                    },
                    "result.description": {
                      "description": "A friendly error message.",
                      "type": "string",
                      "example": "Invalid or missing parameter."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/merchant_specs": {
      "post": {
        "summary": "Retrieve a list of payment methods for a currency",
        "description": "Retrieve a list of enabled payment methods for a channel given a particular currency.\n\nFor more information, see the [documentation](https://developer.peachpayments.com/docs/checkout-merchant-specs). \n",
        "tags": [
          "Helpers"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "authentication.entityId": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 32,
                    "example": "8ac7a4ca68c22c4d0168c2caab2e0025"
                  },
                  "signature": {
                    "description": "Token to verify the integrity of the request, ensuring that only the merchant sending the request is accepted.",
                    "type": "string",
                    "maxLength": 64,
                    "example": "a668342244a9c77b08a2f9090d033d6e2610b431a5c0ca975f32035ed06164f4"
                  },
                  "currency": {
                    "description": "Three-letter ISO 4217 currency code.",
                    "type": "string",
                    "maxLength": 3,
                    "example": "ZAR"
                  }
                },
                "required": [
                  "authentication.entityId",
                  "signature",
                  "currency"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request processed successfully."
          },
          "400": {
            "description": "Invalid authentication information."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/v2/checkout": {
      "post": {
        "summary": "Initiate Checkout",
        "description": "Create a checkout instance for use from Embedded Checkout.\n\nFor more information, see the [documentation](https://developer.peachpayments.com/docs/checkout-embedded-tutorial#tutorial). \n",
        "tags": [
          "Checkout V2 generation"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Referer",
            "description": "An allowlisted domain for the merchant.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "https://example.com"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "authentication.entityId": {
                    "description": "The entity for the request. By default, this is the channel ID.",
                    "type": "string",
                    "maxLength": 32,
                    "example": "8ac7a4ca68c22c4d0168c2caab2e0025"
                  },
                  "merchantTransactionId": {
                    "description": "Merchant-provided reference number unique for your transactions.",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 8,
                    "format": "8-16",
                    "example": "OrderNo453432"
                  },
                  "amount": {
                    "description": "The amount of the payment request. The period is used as the decimal separator.\n\nAn amount of 0 is only supported when the `paymentType` is `PA` and `createRegistration` is set to `true`.\n\nM-PESA does not support decimal amounts, so Checkout automatically rounds them up.\n",
                    "type": "number",
                    "minimum": 0,
                    "maximum": 99999999.99,
                    "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
                    "example": 1010.22
                  },
                  "currency": {
                    "description": "The currency code of the payment request amount.",
                    "type": "string",
                    "enum": [
                      "ZAR",
                      "USD",
                      "KES",
                      "MUR",
                      "GBP",
                      "EUR"
                    ],
                    "example": "ZAR"
                  },
                  "paymentType": {
                    "description": "The payment type for the request.\n\nDoes not accept `RG`, but you can tokenise a card by performing a DB or PA with `createRegistration`.\n\nPA is only supported when `forceDefaultMethod` is set to `true` and `defaultPaymentMethod` is `CARD`.\nFollowing a PA, you can either [capture](https://developer.peachpayments.com/docs/card-manage-payments#capture-a-preauthorisation) or [reverse](https://developer.peachpayments.com/docs/card-manage-payments#reverse-a-preauthorisation) the PA.\n\nRefund transactions through the Dashboard or as described in the [documentation](https://developer.peachpayments.com/docs/checkout-refund).\n",
                    "type": "string",
                    "enum": [
                      "DB",
                      "PA"
                    ],
                    "example": "DB"
                  },
                  "nonce": {
                    "description": "Unique value to represent each request.",
                    "type": "string",
                    "example": "UNQ00012345678",
                    "maxLength": 64,
                    "minLength": 1,
                    "format": "string (1-64)"
                  },
                  "shopperResultUrl": {
                    "description": "Checkout uses a POST request to redirect the customer to this URL after the customer completes checkout. Must be a valid URL that can be accessed through a browser.",
                    "type": "string",
                    "format": "string (6-2048)",
                    "example": "https://example.com/OrderNo453432"
                  },
                  "defaultPaymentMethod": {
                    "description": "The preferred payment method which is active in the checkout page at the point of redirecting.",
                    "type": "string",
                    "enum": [
                      "CARD",
                      "MASTERPASS",
                      "MOBICRED",
                      "MPESA",
                      "1FORYOU",
                      "APLUS",
                      "PAYPAL",
                      "ZEROPAY",
                      "PAYFLEX",
                      "BLINKBYEMTEL",
                      "CAPITECPAY",
                      "PAYBYBANK",
                      "MCBJUICE",
                      "RCS",
                      "FLOAT",
                      "HAPPYPAY",
                      "APPLE PAY",
                      "GOOGLEPAY",
                      "SAMSUNGPAY"
                    ],
                    "example": "CARD"
                  },
                  "forceDefaultMethod": {
                    "description": "Force the default payment method to be the only payment method.",
                    "type": "boolean",
                    "example": true,
                    "default": "false"
                  },
                  "merchantInvoiceId": {
                    "description": "Merchant-provided invoice number unique for your transactions. This identifier is not sent onwards.",
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 255,
                    "format": "string (8-255)",
                    "example": "INV-00001"
                  },
                  "cancelUrl": {
                    "description": "The customer is redirected to this URL if they cancel checkout. It must be a valid URL that can be reached through a browser. To enable the `cancelUrl` parameter, [contact support](https://support.peachpayments.com/support/tickets/new).",
                    "type": "string",
                    "format": "string (6-2048)",
                    "example": "https://example.com/OrderNo453432/cancelled"
                  },
                  "notificationUrl": {
                    "description": "Peach Payments sends a webhook to this URL for any changes to this checkout instance, in addition to the webhook sent to the preconfigured URL.",
                    "type": "string",
                    "format": "string (6-2048)",
                    "example": "https://example.com/OrderNo453432/webhook"
                  },
                  "customParameters": {
                    "description": "A name value pair used for sending custom information. To display custom parameters in the Peach Payments Dashboard > transaction details panel > **More details** tab, use the `\"customParameters\":{\"auxData\":\"{\\\"user_id\\\":\\\"12345\\\",\\\"paymentId\\\":\\\"98765\\\"}\"}` format, changing the parameters as required.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string",
                      "minLength": 0,
                      "maxLength": 2048
                    }
                  },
                  "customer": {
                    "type": "object",
                    "properties": {
                      "merchantCustomerId": {
                        "description": "An identifier for this customer. Typically this is the ID that identifies the shopper in the shop's system.",
                        "type": "string",
                        "maxLength": 48,
                        "minLength": 0,
                        "format": "[\\s\\S]{0,48}",
                        "example": "971020"
                      },
                      "givenName": {
                        "description": "The customer's first name or given name. Required if you send in any other customer parameters, also required for some risk checks and payment providers. Truncated after 48 characters.\n\nPeach Payments recommends including the name so that it displays in the Peach Dashboard and is available for subsequent queries.\n",
                        "type": "string",
                        "maxLength": 48,
                        "minLength": 0,
                        "format": "[\\s\\S]{0,48}",
                        "example": "John"
                      },
                      "surname": {
                        "description": "The customer's last name or surname. Required if you send in any other customer parameters, also required for some risk checks and payment providers. Truncated after 48 characters.\n\nPeach Payments recommends including the surname so that it displays in the Peach Dashboard and is available for subsequent queries.\n",
                        "type": "string",
                        "maxLength": 48,
                        "minLength": 0,
                        "format": "[\\s\\S]{0,48}",
                        "example": "Smith"
                      },
                      "mobile": {
                        "description": "The customer's mobile number.",
                        "type": "string",
                        "maxLength": 24,
                        "minLength": 5,
                        "format": "[+0-9][0-9 \\.()/-]{5,24}",
                        "example": "+27123456789"
                      },
                      "email": {
                        "description": "The customer's email address.",
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 6,
                        "format": "[\\s\\S]{6,128}",
                        "example": "johnsmith@example.com"
                      },
                      "idNumber": {
                        "description": "The customer's ID number, required for high-risk merchants supporting Capitec Pay.",
                        "type": "string",
                        "maxLength": 13,
                        "minLength": 13,
                        "format": "[\\s\\S]{13,13}",
                        "example": "9001010000084"
                      }
                    }
                  },
                  "billing": {
                    "type": "object",
                    "properties": {
                      "street1": {
                        "description": "The door number, floor, building number, building name, and/or street name of the billing address.",
                        "type": "string",
                        "maxLength": 100,
                        "minLength": 1,
                        "format": "[\\s\\S]{1,100}",
                        "example": "1 Example Road"
                      },
                      "street2": {
                        "description": "The adjoining road or locality, if required, of the billing address.",
                        "type": "string",
                        "maxLength": 100,
                        "minLength": 1,
                        "format": "[\\s\\S]{1,100}",
                        "example": "LocalityA"
                      },
                      "city": {
                        "description": "The town, district, or city of the billing address.",
                        "type": "string",
                        "maxLength": 80,
                        "minLength": 1,
                        "format": "[\\s\\S]{1,80}",
                        "example": "Cape Town"
                      },
                      "company": {
                        "description": "The company of the billing address.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "format": "[\\s\\S]{1,64}",
                        "example": "CompanyA"
                      },
                      "country": {
                        "description": "The country of the billing address (ISO 3166-1).",
                        "type": "string",
                        "maxLength": 2,
                        "minLength": 2,
                        "format": "ISO 3166-1",
                        "example": "ZA"
                      },
                      "state": {
                        "description": "The county, state, or region of the billing address.",
                        "type": "string",
                        "maxLength": 50,
                        "minLength": 1,
                        "format": "[\\s\\S]{1,50}",
                        "example": "Western Cape"
                      },
                      "postcode": {
                        "description": "The postal code or ZIP code of the billing address.",
                        "type": "string",
                        "maxLength": 30,
                        "minLength": 1,
                        "format": "[\\s\\S]{1,30}",
                        "example": "1234"
                      }
                    }
                  },
                  "shipping": {
                    "type": "object",
                    "properties": {
                      "street1": {
                        "description": "The door number, floor, building number, building name, and/or street name of the shipping address.",
                        "type": "string",
                        "maxLength": 100,
                        "minLength": 1,
                        "format": "[\\s\\S]{1,100}",
                        "example": "1 Example Road"
                      },
                      "street2": {
                        "description": "The adjoining road or locality, if required, of the shipping address.",
                        "type": "string",
                        "maxLength": 100,
                        "minLength": 1,
                        "format": "[\\s\\S]{1,100}",
                        "example": "LocalityA"
                      },
                      "city": {
                        "description": "The town, district, or city of the shipping address.",
                        "type": "string",
                        "maxLength": 80,
                        "minLength": 1,
                        "format": "[\\s\\S]{1,80}",
                        "example": "Cape Town"
                      },
                      "company": {
                        "description": "The company of the shipping address.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "format": "[\\s\\S]{1,64}",
                        "example": "CompanyA"
                      },
                      "postcode": {
                        "description": "The postal code or ZIP code of the shipping address.",
                        "type": "string",
                        "maxLength": 30,
                        "minLength": 1,
                        "format": "[\\s\\S]{1,30}",
                        "example": "1234"
                      },
                      "country": {
                        "description": "The country of the shipping address (ISO 3166-1).",
                        "type": "string",
                        "maxLength": 2,
                        "minLength": 2,
                        "format": "ISO 3166-1",
                        "example": "ZA"
                      },
                      "state": {
                        "description": "The county, state, or region of the shipping address.",
                        "type": "string",
                        "maxLength": 50,
                        "minLength": 1,
                        "format": "[\\s\\S]{1,50}",
                        "example": "Western Cape"
                      }
                    }
                  },
                  "createRegistration": {
                    "description": "Used to enable [card tokenisation](https://developer.peachpayments.com/docs/checkout-tokenisation) when customer pays with card. You must get permission from your customer before tokenising their cards.\n\nCannot be `true` if `allowStoringDetails` is true.\n",
                    "type": "boolean",
                    "example": true
                  },
                  "originator": {
                    "description": "Used to provide a name for the application that is creating the checkout instance.",
                    "type": "string",
                    "maxLength": 100,
                    "example": "Webstore"
                  },
                  "returnTo": {
                    "description": "Text to display on \"Return to Store\" button on completing checkout.",
                    "type": "string",
                    "enum": [
                      "STORE",
                      "INVOICE"
                    ],
                    "example": "STORE"
                  },
                  "cardTokens": {
                    "description": "List of card tokens. The card tokens must be linked to the customer as they enable one-click payment support for the customer. See the [documentation](https://developer.peachpayments.com/docs/checkout-tokenisation) for more information.",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "8ac7a49f8e9f15d2018ea09b285f0eaa"
                    }
                  },
                  "allowStoringDetails": {
                    "description": "Allow the customer to store their card details for future use. When this is set, the customer is given an option to tokenise their card during checkout.\n\nIf the customer chooses to store their card details, a `registrationId` is returned in the response from checkout. Similar to `createRegistration`.\n\nCannot be `true` if `createRegistration` is true.\n\nSee the [documentation](https://developer.peachpayments.com/docs/checkout-tokenisation) for more information.\n",
                    "type": "boolean",
                    "example": false
                  }
                },
                "required": [
                  "authentication.entityId",
                  "merchantTransactionId",
                  "amount",
                  "currency",
                  "nonce",
                  "shopperResultUrl"
                ]
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "authentication.entityId": {
                    "description": "The entity for the request. By default, this is the channel ID.",
                    "type": "string",
                    "maxLength": 32,
                    "example": "8ac7a4ca68c22c4d0168c2caab2e0025"
                  },
                  "merchantTransactionId": {
                    "description": "Merchant-provided reference number unique for your transactions.",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 8,
                    "format": "8-16",
                    "example": "OrderNo453432"
                  },
                  "amount": {
                    "description": "The amount of the payment request. The period is used as the decimal separator.\n\nAn amount of 0 is only supported when the `paymentType` is `PA` and `createRegistration` is set to `true`.\n\nM-PESA does not support decimal amounts, so Checkout automatically rounds them up.\n",
                    "type": "number",
                    "minimum": 0,
                    "maximum": 99999999.99,
                    "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
                    "example": 1010.22
                  },
                  "currency": {
                    "description": "The currency code of the payment request amount.",
                    "type": "string",
                    "enum": [
                      "ZAR",
                      "USD",
                      "KES",
                      "MUR",
                      "GBP",
                      "EUR"
                    ],
                    "example": "ZAR"
                  },
                  "paymentType": {
                    "description": "The payment type for the request.\n\nDoes not accept `RG`, but you can tokenise a card by performing a DB or PA with `createRegistration`.\n\nPA is only supported when `forceDefaultMethod` is set to `true` and `defaultPaymentMethod` is `CARD`.\nFollowing a PA, you can either [capture](https://developer.peachpayments.com/docs/card-manage-payments#capture-a-preauthorisation) or [reverse](https://developer.peachpayments.com/docs/card-manage-payments#reverse-a-preauthorisation) the PA.\n\nRefund transactions through the Dashboard or as described in the [documentation](https://developer.peachpayments.com/docs/checkout-refund).\n",
                    "type": "string",
                    "enum": [
                      "DB",
                      "PA"
                    ],
                    "example": "DB"
                  },
                  "nonce": {
                    "description": "Unique value to represent each request.",
                    "type": "string",
                    "example": "UNQ00012345678",
                    "maxLength": 64,
                    "minLength": 1,
                    "format": "string (1-64)"
                  },
                  "shopperResultUrl": {
                    "description": "Checkout uses a POST request to redirect the customer to this URL after the customer completes checkout. Must be a valid URL that can be accessed through a browser.",
                    "type": "string",
                    "format": "string (6-2048)",
                    "example": "https://example.com/OrderNo453432"
                  },
                  "defaultPaymentMethod": {
                    "description": "The preferred payment method which is active in the checkout page at the point of redirecting.",
                    "type": "string",
                    "enum": [
                      "CARD",
                      "MASTERPASS",
                      "MOBICRED",
                      "MPESA",
                      "1FORYOU",
                      "APLUS",
                      "PAYPAL",
                      "ZEROPAY",
                      "PAYFLEX",
                      "BLINKBYEMTEL",
                      "CAPITECPAY",
                      "PAYBYBANK",
                      "MCBJUICE",
                      "RCS",
                      "FLOAT",
                      "HAPPYPAY",
                      "APPLE PAY",
                      "GOOGLEPAY",
                      "SAMSUNGPAY"
                    ],
                    "example": "CARD"
                  },
                  "forceDefaultMethod": {
                    "description": "Force the default payment method to be the only payment method.",
                    "type": "boolean",
                    "example": true,
                    "default": "false"
                  },
                  "merchantInvoiceId": {
                    "description": "Merchant-provided invoice number unique for your transactions. This identifier is not sent onwards.",
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 255,
                    "format": "string (8-255)",
                    "example": "INV-00001"
                  },
                  "cancelUrl": {
                    "description": "The customer is redirected to this URL if they cancel checkout. It must be a valid URL that can be reached through a browser. To enable the `cancelUrl` parameter, [contact support](https://support.peachpayments.com/support/tickets/new).",
                    "type": "string",
                    "format": "string (6-2048)",
                    "example": "https://example.com/OrderNo453432/cancelled"
                  },
                  "notificationUrl": {
                    "description": "Peach Payments sends a webhook to this URL for any changes to this checkout instance, in addition to the webhook sent to the preconfigured URL.",
                    "type": "string",
                    "format": "string (6-2048)",
                    "example": "https://example.com/OrderNo453432/webhook"
                  },
                  "customParameters": {
                    "description": "A name value pair used for sending custom information. To display custom parameters in the Peach Payments Dashboard > transaction details panel > **More details** tab, use the `\"customParameters\":{\"auxData\":\"{\\\"user_id\\\":\\\"12345\\\",\\\"paymentId\\\":\\\"98765\\\"}\"}` format, changing the parameters as required.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string",
                      "minLength": 0,
                      "maxLength": 2048
                    }
                  },
                  "customer": {
                    "type": "object",
                    "properties": {
                      "merchantCustomerId": {
                        "description": "An identifier for this customer. Typically this is the ID that identifies the shopper in the shop's system.",
                        "type": "string",
                        "maxLength": 48,
                        "minLength": 0,
                        "format": "[\\s\\S]{0,48}",
                        "example": "971020"
                      },
                      "givenName": {
                        "description": "The customer's first name or given name. Required if you send in any other customer parameters, also required for some risk checks and payment providers. Truncated after 48 characters.\n\nPeach Payments recommends including the name so that it displays in the Peach Dashboard and is available for subsequent queries.\n",
                        "type": "string",
                        "maxLength": 48,
                        "minLength": 0,
                        "format": "[\\s\\S]{0,48}",
                        "example": "John"
                      },
                      "surname": {
                        "description": "The customer's last name or surname. Required if you send in any other customer parameters, also required for some risk checks and payment providers. Truncated after 48 characters.\n\nPeach Payments recommends including the surname so that it displays in the Peach Dashboard and is available for subsequent queries.\n",
                        "type": "string",
                        "maxLength": 48,
                        "minLength": 0,
                        "format": "[\\s\\S]{0,48}",
                        "example": "Smith"
                      },
                      "mobile": {
                        "description": "The customer's mobile number.",
                        "type": "string",
                        "maxLength": 24,
                        "minLength": 5,
                        "format": "[+0-9][0-9 \\.()/-]{5,24}",
                        "example": "+27123456789"
                      },
                      "email": {
                        "description": "The customer's email address.",
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 6,
                        "format": "[\\s\\S]{6,128}",
                        "example": "johnsmith@example.com"
                      },
                      "idNumber": {
                        "description": "The customer's ID number, required for high-risk merchants supporting Capitec Pay.",
                        "type": "string",
                        "maxLength": 13,
                        "minLength": 13,
                        "format": "[\\s\\S]{13,13}",
                        "example": "9001010000084"
                      }
                    }
                  },
                  "billing": {
                    "type": "object",
                    "properties": {
                      "street1": {
                        "description": "The door number, floor, building number, building name, and/or street name of the billing address.",
                        "type": "string",
                        "maxLength": 100,
                        "minLength": 1,
                        "format": "[\\s\\S]{1,100}",
                        "example": "1 Example Road"
                      },
                      "street2": {
                        "description": "The adjoining road or locality, if required, of the billing address.",
                        "type": "string",
                        "maxLength": 100,
                        "minLength": 1,
                        "format": "[\\s\\S]{1,100}",
                        "example": "LocalityA"
                      },
                      "city": {
                        "description": "The town, district, or city of the billing address.",
                        "type": "string",
                        "maxLength": 80,
                        "minLength": 1,
                        "format": "[\\s\\S]{1,80}",
                        "example": "Cape Town"
                      },
                      "company": {
                        "description": "The company of the billing address.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "format": "[\\s\\S]{1,64}",
                        "example": "CompanyA"
                      },
                      "country": {
                        "description": "The country of the billing address (ISO 3166-1).",
                        "type": "string",
                        "maxLength": 2,
                        "minLength": 2,
                        "format": "ISO 3166-1",
                        "example": "ZA"
                      },
                      "state": {
                        "description": "The county, state, or region of the billing address.",
                        "type": "string",
                        "maxLength": 50,
                        "minLength": 1,
                        "format": "[\\s\\S]{1,50}",
                        "example": "Western Cape"
                      },
                      "postcode": {
                        "description": "The postal code or ZIP code of the billing address.",
                        "type": "string",
                        "maxLength": 30,
                        "minLength": 1,
                        "format": "[\\s\\S]{1,30}",
                        "example": "1234"
                      }
                    }
                  },
                  "shipping": {
                    "type": "object",
                    "properties": {
                      "street1": {
                        "description": "The door number, floor, building number, building name, and/or street name of the shipping address.",
                        "type": "string",
                        "maxLength": 100,
                        "minLength": 1,
                        "format": "[\\s\\S]{1,100}",
                        "example": "1 Example Road"
                      },
                      "street2": {
                        "description": "The adjoining road or locality, if required, of the shipping address.",
                        "type": "string",
                        "maxLength": 100,
                        "minLength": 1,
                        "format": "[\\s\\S]{1,100}",
                        "example": "LocalityA"
                      },
                      "city": {
                        "description": "The town, district, or city of the shipping address.",
                        "type": "string",
                        "maxLength": 80,
                        "minLength": 1,
                        "format": "[\\s\\S]{1,80}",
                        "example": "Cape Town"
                      },
                      "company": {
                        "description": "The company of the shipping address.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "format": "[\\s\\S]{1,64}",
                        "example": "CompanyA"
                      },
                      "postcode": {
                        "description": "The postal code or ZIP code of the shipping address.",
                        "type": "string",
                        "maxLength": 30,
                        "minLength": 1,
                        "format": "[\\s\\S]{1,30}",
                        "example": "1234"
                      },
                      "country": {
                        "description": "The country of the shipping address (ISO 3166-1).",
                        "type": "string",
                        "maxLength": 2,
                        "minLength": 2,
                        "format": "ISO 3166-1",
                        "example": "ZA"
                      },
                      "state": {
                        "description": "The county, state, or region of the shipping address.",
                        "type": "string",
                        "maxLength": 50,
                        "minLength": 1,
                        "format": "[\\s\\S]{1,50}",
                        "example": "Western Cape"
                      }
                    }
                  },
                  "createRegistration": {
                    "description": "Used to enable [card tokenisation](https://developer.peachpayments.com/docs/checkout-tokenisation) when customer pays with card. You must get permission from your customer before tokenising their cards.\n\nCannot be `true` if `allowStoringDetails` is true.\n",
                    "type": "boolean",
                    "example": true
                  },
                  "originator": {
                    "description": "Used to provide a name for the application that is creating the checkout instance.",
                    "type": "string",
                    "maxLength": 100,
                    "example": "Webstore"
                  },
                  "returnTo": {
                    "description": "Text to display on \"Return to Store\" button on completing checkout.",
                    "type": "string",
                    "enum": [
                      "STORE",
                      "INVOICE"
                    ],
                    "example": "STORE"
                  },
                  "cardTokens": {
                    "description": "List of card tokens. The card tokens must be linked to the customer as they enable one-click payment support for the customer. See the [documentation](https://developer.peachpayments.com/docs/checkout-tokenisation) for more information.",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "8ac7a49f8e9f15d2018ea09b285f0eaa"
                    }
                  },
                  "allowStoringDetails": {
                    "description": "Allow the customer to store their card details for future use. When this is set, the customer is given an option to tokenise their card during checkout.\n\nIf the customer chooses to store their card details, a `registrationId` is returned in the response from checkout. Similar to `createRegistration`.\n\nCannot be `true` if `createRegistration` is true.\n\nSee the [documentation](https://developer.peachpayments.com/docs/checkout-tokenisation) for more information.\n",
                    "type": "boolean",
                    "example": false
                  }
                },
                "required": [
                  "authentication.entityId",
                  "merchantTransactionId",
                  "amount",
                  "currency",
                  "nonce",
                  "shopperResultUrl"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Checkout successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "checkoutId": {
                      "type": "string",
                      "example": "948cc8dec52a11eb85290242ac130003",
                      "description": "Checkout ID for use by subsequent calls."
                    }
                  },
                  "required": [
                    "checkoutId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "A validation error has occurred with Checkout.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Request lacks valid authentication, message in response contains specifics.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Invalid entity ID passed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Checkout": {
        "type": "object",
        "properties": {
          "authentication.entityId": {
            "description": "The entity for the request. By default, this is the channel ID.",
            "type": "string",
            "maxLength": 32,
            "example": "8ac7a4ca68c22c4d0168c2caab2e0025"
          },
          "signature": {
            "description": "Token to verify the integrity of the payment, ensuring that only the merchant sending the request is accepted.",
            "type": "string",
            "maxLength": 64,
            "example": "a668342244a9c77b08a2f9090d033d6e2610b431a5c0ca975f32035ed06164f4"
          },
          "merchantTransactionId": {
            "description": "Merchant-provided reference number unique for your transactions.",
            "type": "string",
            "maxLength": 16,
            "minLength": 8,
            "format": "8-16",
            "example": "OrderNo453432"
          },
          "amount": {
            "description": "The amount of the payment request. The period is used as the decimal separator.\n\nAn amount of 0 is only supported when the `paymentType` is `PA` and `createRegistration` is set to `true`.\n\nM-PESA does not support decimal amounts, so Checkout automatically rounds them up.\n",
            "type": "string",
            "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
            "example": "1010.22"
          },
          "paymentType": {
            "description": "The payment type for the request.\n\nDoes not accept `RG`, but you can tokenise a card by performing a DB or PA with `createRegistration`.\n\nPA is only supported when `forceDefaultMethod` is set to `true` and `defaultPaymentMethod` is `CARD`.\nFollowing a PA, you can either [capture](https://developer.peachpayments.com/docs/card-manage-payments#capture-a-preauthorisation) or [reverse](https://developer.peachpayments.com/docs/card-manage-payments#reverse-a-preauthorisation) the PA.\n\nRefund transactions through the Dashboard or as described in the [documentation](https://developer.peachpayments.com/docs/checkout-refund).\n",
            "type": "string",
            "enum": [
              "DB",
              "PA"
            ],
            "example": "DB"
          },
          "currency": {
            "description": "The currency code of the payment request amount.",
            "type": "string",
            "enum": [
              "ZAR",
              "USD",
              "KES",
              "MUR",
              "GBP",
              "EUR"
            ],
            "example": "ZAR"
          },
          "nonce": {
            "description": "Unique value to represent each request.",
            "type": "string",
            "example": "UNQ00012345678",
            "maxLength": 64,
            "format": "string (1-64)"
          },
          "shopperResultUrl": {
            "description": "Checkout uses a POST request to redirect the customer to this URL after the customer completes checkout. Must be a valid URL that can be accessed through a browser.",
            "type": "string",
            "format": "string (6-2048)",
            "example": "https://mydemostore.com/OrderNo453432"
          },
          "defaultPaymentMethod": {
            "description": "The preferred payment method which is active in the checkout page at the point of redirecting.",
            "type": "string",
            "enum": [
              "CARD",
              "MASTERPASS",
              "MOBICRED",
              "MPESA",
              "1FORYOU",
              "APLUS",
              "PAYPAL",
              "ZEROPAY",
              "PAYFLEX",
              "BLINKBYEMTEL",
              "CAPITECPAY",
              "PAYBYBANK",
              "APPLE PAY",
              "GOOGLEPAY",
              "SAMSUNGPAY",
              "MCBJUICE",
              "RCS",
              "FLOAT",
              "HAPPYPAY"
            ],
            "example": "CARD"
          },
          "forceDefaultMethod": {
            "description": "Force the default payment method to be the only payment method.",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false",
            "default": "false"
          },
          "merchantInvoiceId": {
            "description": "Merchant-provided invoice number unique for your transactions. This identifier is not sent onwards.",
            "type": "string",
            "minLength": 8,
            "maxLength": 255,
            "format": "string (8-255)",
            "example": "INV-0001"
          },
          "cancelUrl": {
            "description": "The customer is redirected to this URL if they cancel checkout. It must be a valid URL that can be reached through a browser. To enable the `cancelUrl` parameter, [contact support](https://support.peachpayments.com/support/tickets/new).",
            "type": "string",
            "format": "string (6-2048)",
            "example": "https://example.com/OrderNo453432/cancelled"
          },
          "notificationUrl": {
            "description": "Peach Payments sends a webhook to this URL for any changes to this checkout instance, in addition to the webhook sent to the preconfigured URL.",
            "type": "string",
            "format": "string (6-2048)",
            "example": "https://example.com/OrderNo453432/webhook"
          },
          "customParameters[name]": {
            "description": "A name value pair used for sending custom information. To display custom parameters in the Peach Payments Dashboard > transaction details panel > **More details** tab, use the `customParameters[auxData]:\"{\\\"user_id\\\":\\\"12345\\\",\\\"paymentId\\\":\\\"98765\\\"}\"` format, changing the parameters as required.",
            "type": "string",
            "format": "name: [a-zA-Z0-9\\._]{3,64} value: [\\s\\S]{0,2048}",
            "example": "name: Name1 value: Value1"
          },
          "customer.merchantCustomerId": {
            "description": "An identifier for this customer. Typically this is the ID that identifies the shopper in the shop's system.",
            "type": "string",
            "maxLength": 48,
            "minLength": 0,
            "format": "[\\s\\S]{0,48}",
            "example": "971020"
          },
          "customer.givenName": {
            "description": "The customer's first name or given name.\n\nRequired if you send in any other customer parameters, and for some risk checks and payment providers.\n\nPeach Payments recommends including the name so that it displays in the Peach Dashboard and is available for subsequent queries.\n\nTruncated after 48 characters.\n",
            "type": "string",
            "maxLength": 48,
            "minLength": 0,
            "format": "[\\s\\S]{0,48}",
            "example": "John"
          },
          "customer.surname": {
            "description": "The customer's last name or surname.\n\nRequired if you send in any other customer parameters, and for some risk checks and payment providers.\n\nPeach Payments recommends including the surname so that it displays in the Peach Dashboard and is available for subsequent queries.\n\nTruncated after 48 characters.\n",
            "type": "string",
            "maxLength": 48,
            "minLength": 0,
            "format": "[\\s\\S]{0,48}",
            "example": "Smith"
          },
          "customer.mobile": {
            "description": "The customer's mobile number.",
            "type": "string",
            "maxLength": 24,
            "minLength": 5,
            "format": "[+0-9][0-9 \\.()/-]{5,24}",
            "example": "+27123456789"
          },
          "customer.email": {
            "description": "The customer's email address.",
            "type": "string",
            "maxLength": 128,
            "minLength": 6,
            "format": "[\\s\\S]{6,128}",
            "example": "johnsmith@example.com"
          },
          "customer.status": {
            "description": "The customer's status. Accepts `NEW` or `EXISTING`.",
            "type": "string",
            "enum": [
              "NEW",
              "EXISTING"
            ],
            "example": "EXISTING"
          },
          "customer.birthDate": {
            "description": "The customer's birth date in the yyyy-MM-dd format.",
            "type": "string",
            "format": "yyyy-MM-dd",
            "example": "1970-02-17"
          },
          "customer.ip": {
            "description": "The customer's IP address.",
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "format": "[\\s\\S]{1,255}",
            "example": "192.168.1.1"
          },
          "customer.phone": {
            "description": "The customer's phone number.",
            "type": "string",
            "maxLength": 24,
            "minLength": 5,
            "format": "[+0-9][0-9 \\.()/-]{5,24}",
            "example": 27123456789
          },
          "customer.idNumber": {
            "description": "The customer's ID number, required for high-risk merchants supporting Capitec Pay.",
            "type": "string",
            "maxLength": 13,
            "minLength": 13,
            "format": "[\\s\\S]{13,13}",
            "example": "9001010000084"
          },
          "billing.street1": {
            "description": "The door number, floor, building number, building name, and/or street name of the billing address.",
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "format": "[\\s\\S]{1,100}",
            "example": "1 Example Road"
          },
          "billing.street2": {
            "description": "The adjoining road or locality, if required, of the billing address.",
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "format": "[\\s\\S]{1,100}",
            "example": "LocalityA"
          },
          "billing.city": {
            "description": "The town, district, or city of the billing address.",
            "type": "string",
            "maxLength": 80,
            "minLength": 1,
            "format": "[\\s\\S]{1,80}",
            "example": "Cape Town"
          },
          "billing.company": {
            "description": "The company of the billing address.",
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "format": "[\\s\\S]{1,64}",
            "example": "CompanyA"
          },
          "billing.country": {
            "description": "The country of the billing address (ISO 3166-1).",
            "type": "string",
            "maxLength": 3,
            "minLength": 3,
            "format": "ISO 3166-1",
            "example": "ZA"
          },
          "billing.state": {
            "description": "The county, state, or region of the billing address.",
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "format": "[\\s\\S]{1,50}",
            "example": "Western Cape"
          },
          "billing.postcode": {
            "description": "The postal code or ZIP code of the billing address.",
            "type": "string",
            "maxLength": 30,
            "minLength": 1,
            "format": "[\\s\\S]{1,30}",
            "example": "1234"
          },
          "shipping.street1": {
            "description": "The door number, floor, building number, building name, and/or street name of the shipping address.",
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "format": "[\\s\\S]{1,100}",
            "example": "1 Example Road"
          },
          "shipping.street2": {
            "description": "The adjoining road or locality, if required, of the shipping address.",
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "format": "[\\s\\S]{1,100}",
            "example": "LocalityA"
          },
          "shipping.city": {
            "description": "The town, district, or city of the shipping address.",
            "type": "string",
            "maxLength": 80,
            "minLength": 1,
            "format": "[\\s\\S]{1,80}",
            "example": "Cape Town"
          },
          "shipping.company": {
            "description": "The company of the shipping address.",
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "format": "[\\s\\S]{1,64}",
            "example": "CompanyA"
          },
          "shipping.postcode": {
            "description": "The postal code or ZIP code of the shipping address.",
            "type": "string",
            "maxLength": 30,
            "minLength": 1,
            "format": "[\\s\\S]{1,30}",
            "example": "1234"
          },
          "shipping.country": {
            "description": "The country of the shipping address (ISO 3166-1).",
            "type": "string",
            "maxLength": 3,
            "minLength": 3,
            "format": "ISO 3166-1",
            "example": "ZA"
          },
          "shipping.state": {
            "description": "The county, state, or region of the shipping address.",
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "format": "[\\s\\S]{1,50}",
            "example": "Western Cape"
          },
          "cart.tax": {
            "description": "The tax percentage applied to the price of the item in the shopping cart.",
            "type": "string",
            "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
            "example": "15.00"
          },
          "cart.shippingAmount": {
            "description": "The total amount of the cart item including quantity.",
            "type": "string",
            "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
            "example": "12.25"
          },
          "cart.discount": {
            "description": "Discount amount applied on order amount.",
            "type": "string",
            "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
            "example": "02.25"
          },
          "createRegistration": {
            "description": "Used to enable [card tokenisation](https://developer.peachpayments.com/docs/checkout-tokenisation) when customer pays with card. You must get permission from your customer before tokenising their cards.\n\nCannot be `true` if `allowStoringDetails` is true.\n",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "cardTokens": {
            "description": "List of comma-separated card tokens. The card tokens must be linked to the customer as they enable one-click payment support for the customer. See the [documentation](https://developer.peachpayments.com/docs/checkout-tokenisation) for more information.",
            "type": "string",
            "example": "8ac7a49f8e9f15d2018ea09b285f0eaa,8ac7a49f8e9f15d2018ea09b285f0acc"
          },
          "allowStoringDetails": {
            "description": "Allow the customer to store their card details for future use. When this is set, the customer is given an option to tokenise their card during checkout.\n\nIf the customer chooses to store their card details, a `registrationId` is returned in the response from checkout. Similar to `createRegistration`.\n\nCannot be `true` if `createRegistration` is true.\n\nSee the [documentation](https://developer.peachpayments.com/docs/checkout-tokenisation) for more information.\n",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "originator": {
            "description": "Used to provide a name for the application that is creating the checkout instance.",
            "type": "string",
            "maxLength": 100,
            "example": "Webstore"
          },
          "returnTo": {
            "description": "Text to display on \"Return to Store\" button on completing checkout.",
            "type": "string",
            "enum": [
              "STORE",
              "INVOICE"
            ]
          }
        },
        "required": [
          "authentication.entityId",
          "signature",
          "merchantTransactionId",
          "amount",
          "paymentType",
          "currency",
          "nonce",
          "shopperResultUrl"
        ]
      },
      "CheckoutStatus": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the object.",
            "type": "string",
            "example": "PROCESSING"
          },
          "timestamp": {
            "description": "The remaining time, in seconds, of the checkout instance.",
            "type": "string",
            "example": 1800
          },
          "redirect_url": {
            "description": "Redirect URL for Checkout.",
            "type": "string"
          },
          "redirect_post_data": {
            "type": "object",
            "properties": {
              "amount": {
                "description": "The checkout amount.",
                "type": "string",
                "example": "14.99"
              },
              "checkoutId": {
                "type": "string",
                "example": "948cc8dec52a11eb85290242ac130003"
              },
              "currency": {
                "description": "The currency code of the payment request amount.",
                "type": "string",
                "enum": [
                  "ZAR",
                  "USD",
                  "KES",
                  "MUR",
                  "GBP",
                  "EUR"
                ],
                "example": "ZAR"
              },
              "merchantTransactionId": {
                "type": "string",
                "description": "The merchant transaction ID set when creating the checkout."
              },
              "paymentType": {
                "type": "string",
                "enum": [
                  "DB",
                  "PA"
                ],
                "example": "DB"
              },
              "result.code": {
                "description": "A code representing the transaction state.",
                "type": "string",
                "example": "000.200.100"
              },
              "result.description": {
                "description": "A friendly message.",
                "type": "string",
                "example": "Successfully created checkout."
              },
              "timestamp": {
                "description": "Date and time when the checkout was created.",
                "type": "string",
                "example": "2021-06-17T14:22:22Z"
              }
            }
          }
        }
      },
      "RedirectPostData": {
        "type": "object",
        "properties": {
          "amount": {
            "description": "The checkout amount.",
            "type": "string",
            "example": "14.99"
          },
          "checkoutId": {
            "type": "string",
            "example": "948cc8dec52a11eb85290242ac130003"
          },
          "currency": {
            "description": "The currency code of the payment request amount.",
            "type": "string",
            "enum": [
              "ZAR",
              "USD",
              "KES",
              "MUR",
              "GBP",
              "EUR"
            ],
            "example": "ZAR"
          },
          "merchantTransactionId": {
            "type": "string",
            "description": "The merchant transaction ID set when creating the checkout."
          },
          "paymentType": {
            "type": "string",
            "enum": [
              "DB",
              "PA"
            ],
            "example": "DB"
          },
          "result.code": {
            "description": "A code representing the transaction state.",
            "type": "string",
            "example": "000.200.100"
          },
          "result.description": {
            "description": "A friendly message.",
            "type": "string",
            "example": "Successfully created checkout."
          },
          "timestamp": {
            "description": "Date and time when the checkout was created.",
            "type": "string",
            "example": "2021-06-17T14:22:22Z"
          }
        }
      },
      "CheckoutError": {
        "type": "object",
        "properties": {
          "result.code": {
            "description": "A code representing the error.",
            "type": "string",
            "example": "200.300.404"
          },
          "result.description": {
            "description": "A friendly error message.",
            "type": "string",
            "example": "Invalid or missing parameter."
          }
        }
      },
      "MessageResponse": {
        "type": "object",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "CheckoutPage": {
        "type": "string",
        "description": "The checkout frontend HTML page."
      },
      "CheckoutErrorPage": {
        "type": "string",
        "description": "An error page detailing the error that has occured."
      },
      "CheckoutBaseWebhook": {
        "description": "The base model for webhooks.",
        "readOnly": true,
        "type": "object",
        "properties": {
          "amount": {
            "description": "The amount of the payment request. The period is used as the decimal separator. M-PESA does not support decimal amounts, so Checkout automatically rounds them up.",
            "type": "string",
            "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
            "example": 1010.22
          },
          "checkoutId": {
            "type": "string",
            "example": "948cc8dec52a11eb85290242ac130003",
            "maxLength": 64,
            "description": "Checkout ID."
          },
          "currency": {
            "description": "The currency code of the payment request amount.",
            "type": "string",
            "enum": [
              "ZAR",
              "USD",
              "KES",
              "MUR",
              "GBP",
              "EUR"
            ],
            "example": "ZAR"
          },
          "merchantTransactionId": {
            "description": "Merchant-provided reference number unique for your transactions.",
            "type": "string",
            "maxLength": 16,
            "minLength": 8,
            "format": "8-16",
            "example": "OrderNo453432"
          },
          "paymentType": {
            "description": "The payment type for the request.",
            "type": "string",
            "enum": [
              "DB",
              "PA"
            ],
            "example": "DB"
          },
          "result.code": {
            "type": "string",
            "description": "A code representing the checkout state."
          },
          "result.description": {
            "type": "string",
            "description": "A friendly message."
          },
          "signature": {
            "description": "Token to verify the integrity of the webhook, ensuring the request is coming from Checkout.",
            "type": "string",
            "maxLength": 64,
            "example": "a668342244a9c77b08a2f9090d033d6e2610b431a5c0ca975f32035ed06164f4"
          },
          "timestamp": {
            "type": "string",
            "description": "Date and time when the webhook was sent.",
            "example": "2023-07-04T08:10:05Z"
          }
        }
      },
      "CheckoutCreatedWebhook": {
        "description": "Webhook sent when a checkout instance is created.",
        "allOf": [
          {
            "description": "The base model for webhooks.",
            "readOnly": true,
            "type": "object",
            "properties": {
              "amount": {
                "description": "The amount of the payment request. The period is used as the decimal separator. M-PESA does not support decimal amounts, so Checkout automatically rounds them up.",
                "type": "string",
                "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
                "example": 1010.22
              },
              "checkoutId": {
                "type": "string",
                "example": "948cc8dec52a11eb85290242ac130003",
                "maxLength": 64,
                "description": "Checkout ID."
              },
              "currency": {
                "description": "The currency code of the payment request amount.",
                "type": "string",
                "enum": [
                  "ZAR",
                  "USD",
                  "KES",
                  "MUR",
                  "GBP",
                  "EUR"
                ],
                "example": "ZAR"
              },
              "merchantTransactionId": {
                "description": "Merchant-provided reference number unique for your transactions.",
                "type": "string",
                "maxLength": 16,
                "minLength": 8,
                "format": "8-16",
                "example": "OrderNo453432"
              },
              "paymentType": {
                "description": "The payment type for the request.",
                "type": "string",
                "enum": [
                  "DB",
                  "PA"
                ],
                "example": "DB"
              },
              "result.code": {
                "type": "string",
                "description": "A code representing the checkout state."
              },
              "result.description": {
                "type": "string",
                "description": "A friendly message."
              },
              "signature": {
                "description": "Token to verify the integrity of the webhook, ensuring the request is coming from Checkout.",
                "type": "string",
                "maxLength": 64,
                "example": "a668342244a9c77b08a2f9090d033d6e2610b431a5c0ca975f32035ed06164f4"
              },
              "timestamp": {
                "type": "string",
                "description": "Date and time when the webhook was sent.",
                "example": "2023-07-04T08:10:05Z"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "result.code": {
                "type": "string",
                "default": "000.200.100"
              },
              "result.description": {
                "type": "string",
                "default": "successfully created checkout"
              }
            }
          }
        ]
      },
      "CheckoutCancelledWebhook": {
        "description": "Webhook sent when a checkout instance is cancelled.",
        "allOf": [
          {
            "description": "The base model for webhooks.",
            "readOnly": true,
            "type": "object",
            "properties": {
              "amount": {
                "description": "The amount of the payment request. The period is used as the decimal separator. M-PESA does not support decimal amounts, so Checkout automatically rounds them up.",
                "type": "string",
                "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
                "example": 1010.22
              },
              "checkoutId": {
                "type": "string",
                "example": "948cc8dec52a11eb85290242ac130003",
                "maxLength": 64,
                "description": "Checkout ID."
              },
              "currency": {
                "description": "The currency code of the payment request amount.",
                "type": "string",
                "enum": [
                  "ZAR",
                  "USD",
                  "KES",
                  "MUR",
                  "GBP",
                  "EUR"
                ],
                "example": "ZAR"
              },
              "merchantTransactionId": {
                "description": "Merchant-provided reference number unique for your transactions.",
                "type": "string",
                "maxLength": 16,
                "minLength": 8,
                "format": "8-16",
                "example": "OrderNo453432"
              },
              "paymentType": {
                "description": "The payment type for the request.",
                "type": "string",
                "enum": [
                  "DB",
                  "PA"
                ],
                "example": "DB"
              },
              "result.code": {
                "type": "string",
                "description": "A code representing the checkout state."
              },
              "result.description": {
                "type": "string",
                "description": "A friendly message."
              },
              "signature": {
                "description": "Token to verify the integrity of the webhook, ensuring the request is coming from Checkout.",
                "type": "string",
                "maxLength": 64,
                "example": "a668342244a9c77b08a2f9090d033d6e2610b431a5c0ca975f32035ed06164f4"
              },
              "timestamp": {
                "type": "string",
                "description": "Date and time when the webhook was sent.",
                "example": "2023-07-04T08:10:05Z"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "result.code": {
                "type": "string",
                "default": "100.396.101"
              },
              "result.description": {
                "type": "string",
                "default": "Cancelled by user"
              }
            }
          }
        ]
      },
      "CheckoutUncertainWebhook": {
        "description": "Webhook sent when a checkout instance is potentially cancelled by a user.",
        "allOf": [
          {
            "description": "The base model for webhooks.",
            "readOnly": true,
            "type": "object",
            "properties": {
              "amount": {
                "description": "The amount of the payment request. The period is used as the decimal separator. M-PESA does not support decimal amounts, so Checkout automatically rounds them up.",
                "type": "string",
                "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
                "example": 1010.22
              },
              "checkoutId": {
                "type": "string",
                "example": "948cc8dec52a11eb85290242ac130003",
                "maxLength": 64,
                "description": "Checkout ID."
              },
              "currency": {
                "description": "The currency code of the payment request amount.",
                "type": "string",
                "enum": [
                  "ZAR",
                  "USD",
                  "KES",
                  "MUR",
                  "GBP",
                  "EUR"
                ],
                "example": "ZAR"
              },
              "merchantTransactionId": {
                "description": "Merchant-provided reference number unique for your transactions.",
                "type": "string",
                "maxLength": 16,
                "minLength": 8,
                "format": "8-16",
                "example": "OrderNo453432"
              },
              "paymentType": {
                "description": "The payment type for the request.",
                "type": "string",
                "enum": [
                  "DB",
                  "PA"
                ],
                "example": "DB"
              },
              "result.code": {
                "type": "string",
                "description": "A code representing the checkout state."
              },
              "result.description": {
                "type": "string",
                "description": "A friendly message."
              },
              "signature": {
                "description": "Token to verify the integrity of the webhook, ensuring the request is coming from Checkout.",
                "type": "string",
                "maxLength": 64,
                "example": "a668342244a9c77b08a2f9090d033d6e2610b431a5c0ca975f32035ed06164f4"
              },
              "timestamp": {
                "type": "string",
                "description": "Date and time when the webhook was sent.",
                "example": "2023-07-04T08:10:05Z"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "result.code": {
                "type": "string",
                "default": "100.396.104"
              },
              "result.description": {
                "type": "string",
                "default": "Uncertain status - probably cancelled by user"
              }
            }
          }
        ]
      },
      "CheckoutPendingWebhook": {
        "description": "Webhook sent when a transaction is created on a checkout instance.",
        "allOf": [
          {
            "description": "The base model for webhooks.",
            "readOnly": true,
            "type": "object",
            "properties": {
              "amount": {
                "description": "The amount of the payment request. The period is used as the decimal separator. M-PESA does not support decimal amounts, so Checkout automatically rounds them up.",
                "type": "string",
                "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
                "example": 1010.22
              },
              "checkoutId": {
                "type": "string",
                "example": "948cc8dec52a11eb85290242ac130003",
                "maxLength": 64,
                "description": "Checkout ID."
              },
              "currency": {
                "description": "The currency code of the payment request amount.",
                "type": "string",
                "enum": [
                  "ZAR",
                  "USD",
                  "KES",
                  "MUR",
                  "GBP",
                  "EUR"
                ],
                "example": "ZAR"
              },
              "merchantTransactionId": {
                "description": "Merchant-provided reference number unique for your transactions.",
                "type": "string",
                "maxLength": 16,
                "minLength": 8,
                "format": "8-16",
                "example": "OrderNo453432"
              },
              "paymentType": {
                "description": "The payment type for the request.",
                "type": "string",
                "enum": [
                  "DB",
                  "PA"
                ],
                "example": "DB"
              },
              "result.code": {
                "type": "string",
                "description": "A code representing the checkout state."
              },
              "result.description": {
                "type": "string",
                "description": "A friendly message."
              },
              "signature": {
                "description": "Token to verify the integrity of the webhook, ensuring the request is coming from Checkout.",
                "type": "string",
                "maxLength": 64,
                "example": "a668342244a9c77b08a2f9090d033d6e2610b431a5c0ca975f32035ed06164f4"
              },
              "timestamp": {
                "type": "string",
                "description": "Date and time when the webhook was sent.",
                "example": "2023-07-04T08:10:05Z"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "description": "The transaction ID.",
                "type": "string"
              },
              "paymentBrand": {
                "description": "The payment method which the customer is paying with.",
                "type": "string",
                "enum": [
                  "VISA",
                  "MASTERCARD",
                  "DINERS CLUB",
                  "AMERICAN EXPRESS",
                  "MASTERPASS",
                  "MOBICRED",
                  "MPESA",
                  "1FORYOU",
                  "APLUS",
                  "PAYPAL",
                  "ZEROPAY",
                  "PAYFLEX",
                  "BLINKBYEMTEL",
                  "CAPITECPAY",
                  "PAYBYBANK",
                  "MCBJUICE",
                  "RCS",
                  "FLOAT",
                  "HAPPYPAY",
                  "APPLE PAY",
                  "GOOGLEPAY",
                  "SAMSUNGPAY"
                ],
                "example": "VISA"
              },
              "result.code": {
                "type": "string",
                "default": "000.200.000"
              },
              "result.description": {
                "type": "string",
                "default": "transaction pending"
              }
            }
          }
        ]
      },
      "CheckoutSuccessfulWebhook": {
        "description": "Webhook sent when a checkout instance is successfully completed.",
        "allOf": [
          {
            "description": "Webhook sent when a transaction is created on a checkout instance.",
            "allOf": [
              {
                "description": "The base model for webhooks.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "amount": {
                    "description": "The amount of the payment request. The period is used as the decimal separator. M-PESA does not support decimal amounts, so Checkout automatically rounds them up.",
                    "type": "string",
                    "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
                    "example": 1010.22
                  },
                  "checkoutId": {
                    "type": "string",
                    "example": "948cc8dec52a11eb85290242ac130003",
                    "maxLength": 64,
                    "description": "Checkout ID."
                  },
                  "currency": {
                    "description": "The currency code of the payment request amount.",
                    "type": "string",
                    "enum": [
                      "ZAR",
                      "USD",
                      "KES",
                      "MUR",
                      "GBP",
                      "EUR"
                    ],
                    "example": "ZAR"
                  },
                  "merchantTransactionId": {
                    "description": "Merchant-provided reference number unique for your transactions.",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 8,
                    "format": "8-16",
                    "example": "OrderNo453432"
                  },
                  "paymentType": {
                    "description": "The payment type for the request.",
                    "type": "string",
                    "enum": [
                      "DB",
                      "PA"
                    ],
                    "example": "DB"
                  },
                  "result.code": {
                    "type": "string",
                    "description": "A code representing the checkout state."
                  },
                  "result.description": {
                    "type": "string",
                    "description": "A friendly message."
                  },
                  "signature": {
                    "description": "Token to verify the integrity of the webhook, ensuring the request is coming from Checkout.",
                    "type": "string",
                    "maxLength": 64,
                    "example": "a668342244a9c77b08a2f9090d033d6e2610b431a5c0ca975f32035ed06164f4"
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "Date and time when the webhook was sent.",
                    "example": "2023-07-04T08:10:05Z"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "The transaction ID.",
                    "type": "string"
                  },
                  "paymentBrand": {
                    "description": "The payment method which the customer is paying with.",
                    "type": "string",
                    "enum": [
                      "VISA",
                      "MASTERCARD",
                      "DINERS CLUB",
                      "AMERICAN EXPRESS",
                      "MASTERPASS",
                      "MOBICRED",
                      "MPESA",
                      "1FORYOU",
                      "APLUS",
                      "PAYPAL",
                      "ZEROPAY",
                      "PAYFLEX",
                      "BLINKBYEMTEL",
                      "CAPITECPAY",
                      "PAYBYBANK",
                      "MCBJUICE",
                      "RCS",
                      "FLOAT",
                      "HAPPYPAY",
                      "APPLE PAY",
                      "GOOGLEPAY",
                      "SAMSUNGPAY"
                    ],
                    "example": "VISA"
                  },
                  "result.code": {
                    "type": "string",
                    "default": "000.200.000"
                  },
                  "result.description": {
                    "type": "string",
                    "default": "transaction pending"
                  }
                }
              }
            ]
          },
          {
            "type": "object",
            "properties": {
              "merchant.name": {
                "type": "string"
              },
              "recon.authCode": {
                "type": "string"
              },
              "recon.resultCode": {
                "type": "string"
              },
              "recon.rrn": {
                "type": "string"
              },
              "result.code": {
                "type": "string",
                "default": "000.000.000"
              },
              "result.description": {
                "type": "string",
                "default": "Request successfully processed in 'Merchant in Integrator Test Mode'"
              },
              "resultDetails.AcquirerResponse": {
                "type": "string"
              },
              "resultDetails.ConnectorTxID1": {
                "type": "string"
              },
              "resultDetails.ExtendedDescription": {
                "type": "string"
              }
            }
          },
          {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "card.bin": {
                    "type": "string"
                  },
                  "card.holder": {
                    "type": "string"
                  },
                  "card.last4Digits": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "paymentBrand": {
                    "type": "string",
                    "default": "MOBICRED"
                  }
                }
              }
            ]
          }
        ]
      },
      "CheckoutV2": {
        "type": "object",
        "properties": {
          "authentication.entityId": {
            "description": "The entity for the request. By default, this is the channel ID.",
            "type": "string",
            "maxLength": 32,
            "example": "8ac7a4ca68c22c4d0168c2caab2e0025"
          },
          "merchantTransactionId": {
            "description": "Merchant-provided reference number unique for your transactions.",
            "type": "string",
            "maxLength": 16,
            "minLength": 8,
            "format": "8-16",
            "example": "OrderNo453432"
          },
          "amount": {
            "description": "The amount of the payment request. The period is used as the decimal separator.\n\nAn amount of 0 is only supported when the `paymentType` is `PA` and `createRegistration` is set to `true`.\n\nM-PESA does not support decimal amounts, so Checkout automatically rounds them up.\n",
            "type": "number",
            "minimum": 0,
            "maximum": 99999999.99,
            "format": "^[0-9]{1,8}(\\\\.[0-9]{2})?$",
            "example": 1010.22
          },
          "currency": {
            "description": "The currency code of the payment request amount.",
            "type": "string",
            "enum": [
              "ZAR",
              "USD",
              "KES",
              "MUR",
              "GBP",
              "EUR"
            ],
            "example": "ZAR"
          },
          "paymentType": {
            "description": "The payment type for the request.\n\nDoes not accept `RG`, but you can tokenise a card by performing a DB or PA with `createRegistration`.\n\nPA is only supported when `forceDefaultMethod` is set to `true` and `defaultPaymentMethod` is `CARD`.\nFollowing a PA, you can either [capture](https://developer.peachpayments.com/docs/card-manage-payments#capture-a-preauthorisation) or [reverse](https://developer.peachpayments.com/docs/card-manage-payments#reverse-a-preauthorisation) the PA.\n\nRefund transactions through the Dashboard or as described in the [documentation](https://developer.peachpayments.com/docs/checkout-refund).\n",
            "type": "string",
            "enum": [
              "DB",
              "PA"
            ],
            "example": "DB"
          },
          "nonce": {
            "description": "Unique value to represent each request.",
            "type": "string",
            "example": "UNQ00012345678",
            "maxLength": 64,
            "minLength": 1,
            "format": "string (1-64)"
          },
          "shopperResultUrl": {
            "description": "Checkout uses a POST request to redirect the customer to this URL after the customer completes checkout. Must be a valid URL that can be accessed through a browser.",
            "type": "string",
            "format": "string (6-2048)",
            "example": "https://example.com/OrderNo453432"
          },
          "defaultPaymentMethod": {
            "description": "The preferred payment method which is active in the checkout page at the point of redirecting.",
            "type": "string",
            "enum": [
              "CARD",
              "MASTERPASS",
              "MOBICRED",
              "MPESA",
              "1FORYOU",
              "APLUS",
              "PAYPAL",
              "ZEROPAY",
              "PAYFLEX",
              "BLINKBYEMTEL",
              "CAPITECPAY",
              "PAYBYBANK",
              "MCBJUICE",
              "RCS",
              "FLOAT",
              "HAPPYPAY",
              "APPLE PAY",
              "GOOGLEPAY",
              "SAMSUNGPAY"
            ],
            "example": "CARD"
          },
          "forceDefaultMethod": {
            "description": "Force the default payment method to be the only payment method.",
            "type": "boolean",
            "example": true,
            "default": "false"
          },
          "merchantInvoiceId": {
            "description": "Merchant-provided invoice number unique for your transactions. This identifier is not sent onwards.",
            "type": "string",
            "minLength": 8,
            "maxLength": 255,
            "format": "string (8-255)",
            "example": "INV-00001"
          },
          "cancelUrl": {
            "description": "The customer is redirected to this URL if they cancel checkout. It must be a valid URL that can be reached through a browser. To enable the `cancelUrl` parameter, [contact support](https://support.peachpayments.com/support/tickets/new).",
            "type": "string",
            "format": "string (6-2048)",
            "example": "https://example.com/OrderNo453432/cancelled"
          },
          "notificationUrl": {
            "description": "Peach Payments sends a webhook to this URL for any changes to this checkout instance, in addition to the webhook sent to the preconfigured URL.",
            "type": "string",
            "format": "string (6-2048)",
            "example": "https://example.com/OrderNo453432/webhook"
          },
          "customParameters": {
            "description": "A name value pair used for sending custom information. To display custom parameters in the Peach Payments Dashboard > transaction details panel > **More details** tab, use the `\"customParameters\":{\"auxData\":\"{\\\"user_id\\\":\\\"12345\\\",\\\"paymentId\\\":\\\"98765\\\"}\"}` format, changing the parameters as required.",
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "minLength": 0,
              "maxLength": 2048
            }
          },
          "customer": {
            "type": "object",
            "properties": {
              "merchantCustomerId": {
                "description": "An identifier for this customer. Typically this is the ID that identifies the shopper in the shop's system.",
                "type": "string",
                "maxLength": 48,
                "minLength": 0,
                "format": "[\\s\\S]{0,48}",
                "example": "971020"
              },
              "givenName": {
                "description": "The customer's first name or given name. Required if you send in any other customer parameters, also required for some risk checks and payment providers. Truncated after 48 characters.\n\nPeach Payments recommends including the name so that it displays in the Peach Dashboard and is available for subsequent queries.\n",
                "type": "string",
                "maxLength": 48,
                "minLength": 0,
                "format": "[\\s\\S]{0,48}",
                "example": "John"
              },
              "surname": {
                "description": "The customer's last name or surname. Required if you send in any other customer parameters, also required for some risk checks and payment providers. Truncated after 48 characters.\n\nPeach Payments recommends including the surname so that it displays in the Peach Dashboard and is available for subsequent queries.\n",
                "type": "string",
                "maxLength": 48,
                "minLength": 0,
                "format": "[\\s\\S]{0,48}",
                "example": "Smith"
              },
              "mobile": {
                "description": "The customer's mobile number.",
                "type": "string",
                "maxLength": 24,
                "minLength": 5,
                "format": "[+0-9][0-9 \\.()/-]{5,24}",
                "example": "+27123456789"
              },
              "email": {
                "description": "The customer's email address.",
                "type": "string",
                "maxLength": 128,
                "minLength": 6,
                "format": "[\\s\\S]{6,128}",
                "example": "johnsmith@example.com"
              },
              "idNumber": {
                "description": "The customer's ID number, required for high-risk merchants supporting Capitec Pay.",
                "type": "string",
                "maxLength": 13,
                "minLength": 13,
                "format": "[\\s\\S]{13,13}",
                "example": "9001010000084"
              }
            }
          },
          "billing": {
            "type": "object",
            "properties": {
              "street1": {
                "description": "The door number, floor, building number, building name, and/or street name of the billing address.",
                "type": "string",
                "maxLength": 100,
                "minLength": 1,
                "format": "[\\s\\S]{1,100}",
                "example": "1 Example Road"
              },
              "street2": {
                "description": "The adjoining road or locality, if required, of the billing address.",
                "type": "string",
                "maxLength": 100,
                "minLength": 1,
                "format": "[\\s\\S]{1,100}",
                "example": "LocalityA"
              },
              "city": {
                "description": "The town, district, or city of the billing address.",
                "type": "string",
                "maxLength": 80,
                "minLength": 1,
                "format": "[\\s\\S]{1,80}",
                "example": "Cape Town"
              },
              "company": {
                "description": "The company of the billing address.",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "format": "[\\s\\S]{1,64}",
                "example": "CompanyA"
              },
              "country": {
                "description": "The country of the billing address (ISO 3166-1).",
                "type": "string",
                "maxLength": 2,
                "minLength": 2,
                "format": "ISO 3166-1",
                "example": "ZA"
              },
              "state": {
                "description": "The county, state, or region of the billing address.",
                "type": "string",
                "maxLength": 50,
                "minLength": 1,
                "format": "[\\s\\S]{1,50}",
                "example": "Western Cape"
              },
              "postcode": {
                "description": "The postal code or ZIP code of the billing address.",
                "type": "string",
                "maxLength": 30,
                "minLength": 1,
                "format": "[\\s\\S]{1,30}",
                "example": "1234"
              }
            }
          },
          "shipping": {
            "type": "object",
            "properties": {
              "street1": {
                "description": "The door number, floor, building number, building name, and/or street name of the shipping address.",
                "type": "string",
                "maxLength": 100,
                "minLength": 1,
                "format": "[\\s\\S]{1,100}",
                "example": "1 Example Road"
              },
              "street2": {
                "description": "The adjoining road or locality, if required, of the shipping address.",
                "type": "string",
                "maxLength": 100,
                "minLength": 1,
                "format": "[\\s\\S]{1,100}",
                "example": "LocalityA"
              },
              "city": {
                "description": "The town, district, or city of the shipping address.",
                "type": "string",
                "maxLength": 80,
                "minLength": 1,
                "format": "[\\s\\S]{1,80}",
                "example": "Cape Town"
              },
              "company": {
                "description": "The company of the shipping address.",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "format": "[\\s\\S]{1,64}",
                "example": "CompanyA"
              },
              "postcode": {
                "description": "The postal code or ZIP code of the shipping address.",
                "type": "string",
                "maxLength": 30,
                "minLength": 1,
                "format": "[\\s\\S]{1,30}",
                "example": "1234"
              },
              "country": {
                "description": "The country of the shipping address (ISO 3166-1).",
                "type": "string",
                "maxLength": 2,
                "minLength": 2,
                "format": "ISO 3166-1",
                "example": "ZA"
              },
              "state": {
                "description": "The county, state, or region of the shipping address.",
                "type": "string",
                "maxLength": 50,
                "minLength": 1,
                "format": "[\\s\\S]{1,50}",
                "example": "Western Cape"
              }
            }
          },
          "createRegistration": {
            "description": "Used to enable [card tokenisation](https://developer.peachpayments.com/docs/checkout-tokenisation) when customer pays with card. You must get permission from your customer before tokenising their cards.\n\nCannot be `true` if `allowStoringDetails` is true.\n",
            "type": "boolean",
            "example": true
          },
          "originator": {
            "description": "Used to provide a name for the application that is creating the checkout instance.",
            "type": "string",
            "maxLength": 100,
            "example": "Webstore"
          },
          "returnTo": {
            "description": "Text to display on \"Return to Store\" button on completing checkout.",
            "type": "string",
            "enum": [
              "STORE",
              "INVOICE"
            ],
            "example": "STORE"
          },
          "cardTokens": {
            "description": "List of card tokens. The card tokens must be linked to the customer as they enable one-click payment support for the customer. See the [documentation](https://developer.peachpayments.com/docs/checkout-tokenisation) for more information.",
            "type": "array",
            "items": {
              "type": "string",
              "example": "8ac7a49f8e9f15d2018ea09b285f0eaa"
            }
          },
          "allowStoringDetails": {
            "description": "Allow the customer to store their card details for future use. When this is set, the customer is given an option to tokenise their card during checkout.\n\nIf the customer chooses to store their card details, a `registrationId` is returned in the response from checkout. Similar to `createRegistration`.\n\nCannot be `true` if `createRegistration` is true.\n\nSee the [documentation](https://developer.peachpayments.com/docs/checkout-tokenisation) for more information.\n",
            "type": "boolean",
            "example": false
          }
        },
        "required": [
          "authentication.entityId",
          "merchantTransactionId",
          "amount",
          "currency",
          "nonce",
          "shopperResultUrl"
        ]
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "description": "Merchant-level authentication (https://developer.peachpayments.com/docs/checkout-js-authentication).",
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": true,
    "samples-enabled": true
  }
}